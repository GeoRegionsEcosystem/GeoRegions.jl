var documenterSearchIndex = {"docs":
[{"location":"example/era5.html#An-Example-with-ERA5-Precipitable-Water-Data","page":"An Example with ERA5 Precipitable Water Data","title":"An Example with ERA5 Precipitable Water Data","text":"","category":"section"},{"location":"example/era5.html","page":"An Example with ERA5 Precipitable Water Data","title":"An Example with ERA5 Precipitable Water Data","text":"In this example, we use GeoRegions to define custom GeoRegions, and extract precpitable water data from an example ERA5 dataset for this GeoRegion.  This example demonstrates:","category":"page"},{"location":"example/era5.html","page":"An Example with ERA5 Precipitable Water Data","title":"An Example with ERA5 Precipitable Water Data","text":"Load a GeoRegion\nExtracting data for each of these GeoRegions\nPlotting the extracted data","category":"page"},{"location":"example/era5.html#Load-Dependencies","page":"An Example with ERA5 Precipitable Water Data","title":"Load Dependencies","text":"","category":"section"},{"location":"example/era5.html","page":"An Example with ERA5 Precipitable Water Data","title":"An Example with ERA5 Precipitable Water Data","text":"First, let's load all the dependencies","category":"page"},{"location":"example/era5.html","page":"An Example with ERA5 Precipitable Water Data","title":"An Example with ERA5 Precipitable Water Data","text":"Note: I personally prefer to use ProPlot to do my plotting.  But because it has several dependencies and requires fiddling around with PyCall backends and Anaconda installations, this might not be for everyone","category":"page"},{"location":"example/era5.html","page":"An Example with ERA5 Precipitable Water Data","title":"An Example with ERA5 Precipitable Water Data","text":"using DelimitedFiles\nusing GeoRegions\nusing NCDatasets\nusing PyCall, LaTeXStrings\npplt = pyimport(\"proplot\")","category":"page"},{"location":"example/era5.html#Load-Dataset","page":"An Example with ERA5 Precipitable Water Data","title":"Load Dataset","text":"","category":"section"},{"location":"example/era5.html","page":"An Example with ERA5 Precipitable Water Data","title":"An Example with ERA5 Precipitable Water Data","text":"I downloaded ERA5 Total Column Water Vapour data from the Climate Data Store for the month of January in 2020.","category":"page"},{"location":"example/era5.html","page":"An Example with ERA5 Precipitable Water Data","title":"An Example with ERA5 Precipitable Water Data","text":"ds  = NCDataset(\"tcwv.nc\")\nlon = ds[\"longitude\"][:]\nlat = ds[\"latitude\"][:]\npwv = ds[\"tcwv\"][:,:,1]*1\nclose(ds)","category":"page"},{"location":"example/era5.html","page":"An Example with ERA5 Precipitable Water Data","title":"An Example with ERA5 Precipitable Water Data","text":"I load the textfile I use to plot coastlines (ProPlot has this already, but I like my more detailed version).","category":"page"},{"location":"example/era5.html","page":"An Example with ERA5 Precipitable Water Data","title":"An Example with ERA5 Precipitable Water Data","text":"coord = readdlm(\"/Users/natgeo-wong/Codes/plot/GLB-i.txt\",comments=true,comment_char='#')\nx = coord[:,1]\ny = coord[:,2]","category":"page"},{"location":"example/era5.html","page":"An Example with ERA5 Precipitable Water Data","title":"An Example with ERA5 Precipitable Water Data","text":"And we plot the global dataset ...","category":"page"},{"location":"example/era5.html","page":"An Example with ERA5 Precipitable Water Data","title":"An Example with ERA5 Precipitable Water Data","text":"pplt.close(); f1,a1 = pplt.subplots(aspect=2,axwidth=4)\nc = a1[1].contourf(lon,lat,pwv',levels=10:5:60,extend=\"both\",cmap=\"viridis\")\na1[1].plot(x,y,c=\"k\",lw=0.5)\na1[1].format(\n    xlim=(0,360),xlabel=L\"Longitude / $\\degree$\",xlocator=0:60:360,\n    ylim=(-90,90),ylabel=L\"Latitude / $\\degree$\",ylocator=-90:30:90,\n    suptitle=\"Precipitable Water Vapour (GLB)\"\n)\na1[1].colorbar(c,loc=\"r\")","category":"page"},{"location":"example/era5.html","page":"An Example with ERA5 Precipitable Water Data","title":"An Example with ERA5 Precipitable Water Data","text":"(Image: globe)","category":"page"},{"location":"example/era5.html#Using-GeoRegions-to-extract-data-over-Southeast-Asia","page":"An Example with ERA5 Precipitable Water Data","title":"Using GeoRegions to extract data over Southeast Asia","text":"","category":"section"},{"location":"example/era5.html","page":"An Example with ERA5 Precipitable Water Data","title":"An Example with ERA5 Precipitable Water Data","text":"Now, let's use GeoRegions.jl to extract data over Southeast Asia.  We will use the region as defined by the AR6 IPCC report, AR6_SEA.  First, we load the GeoRegion (in this case, a PolyRegion)","category":"page"},{"location":"example/era5.html","page":"An Example with ERA5 Precipitable Water Data","title":"An Example with ERA5 Precipitable Water Data","text":"julia> geo = GeoRegion(\"AR6_SEA\")\nThe Polygonal Region AR6_SEA has the following properties:\n    Region ID (regID) : AR6_SEA\n    Parent ID (parID) : GLB\n    Name       (name) : Southeast Asia\n    Bounds  (N,S,E,W) : [19.5, -10.0, 155.0, 93.0]\n    Shape     (shape) : Point2{Float64}[[93.0, -10.0], [93.0, 19.5], [132.0, 19.5], [132.0, 5.0], [155.0, -10.0], [93.0, -10.0]]\n        (is180,is360) : (false, true)","category":"page"},{"location":"example/era5.html","page":"An Example with ERA5 Precipitable Water Data","title":"An Example with ERA5 Precipitable Water Data","text":"And then we load the PolyGrid information based on the lon and lat values from ERA5","category":"page"},{"location":"example/era5.html","page":"An Example with ERA5 Precipitable Water Data","title":"An Example with ERA5 Precipitable Water Data","text":"julia> ginfo = RegionGrid(geo,lon,lat)\nThe Polygonal Grid has the following properties:\n    Grid Bounds       (igrid) : [283, 401, 621, 373]\n    Longitude Indices  (ilon) : [373, 374, 375, 376, 377, 378, 379, 380, 381, 382  …  612, 613, 614, 615, 616, 617, 618, 619, 620, 621]\n    Latitude Indices   (ilat) : [283, 284, 285, 286, 287, 288, 289, 290, 291, 292  …  392, 393, 394, 395, 396, 397, 398, 399, 400, 401]\n    Longitude Points   (glon) : [93.0, 93.25, 93.5, 93.75, 94.0, 94.25, 94.5, 94.75, 95.0, 95.25  …  152.75, 153.0, 153.25, 153.5, 153.75, 154.0, 154.25, 154.5, 154.75, 155.0]\n    Latitude Points    (glat) : [19.5, 19.25, 19.0, 18.75, 18.5, 18.25, 18.0, 17.75, 17.5, 17.25  …  -7.75, -8.0, -8.25, -8.5, -8.75, -9.0, -9.25, -9.5, -9.75, -10.0]\n    Region Size (nlon * nlat) : 249 lon points x 119 lat points\n    Region Mask (sum(mask) / (nlon * nlat)) : 21461 / 29631","category":"page"},{"location":"example/era5.html","page":"An Example with ERA5 Precipitable Water Data","title":"An Example with ERA5 Precipitable Water Data","text":"Next, using the info in the PolyGrid variable ginfo, we extract out the precipitable water vapour data for the region into a new variable newpwv.  Although newpwv is gridded and thus rectilinear, with the aid of ginfo.mask we can set the pwv information outside the PolyRegion to NaN.","category":"page"},{"location":"example/era5.html","page":"An Example with ERA5 Precipitable Water Data","title":"An Example with ERA5 Precipitable Water Data","text":"blon,blat,slon,slat = coordGeoRegion(geo)\nglon = ginfo.glon; nglon = length(glon); ilon = ginfo.ilon\nglat = ginfo.glat; nglat = length(glat); ilat = ginfo.ilat\nnewpwv = zeros(nglon,nglat)\nfor iglat = 1 : nglat, iglon = 1 : nglon\n    newpwv[iglon,iglat] = pwv[ilon[iglon],ilat[iglat]] * ginfo.mask[iglon,iglat]\nend","category":"page"},{"location":"example/era5.html","page":"An Example with ERA5 Precipitable Water Data","title":"An Example with ERA5 Precipitable Water Data","text":"And we plot the resulting data.  We see that although newpwv extends throughout the bound (red region), data is only retained within the actual shape (blue) of the GeoRegion.","category":"page"},{"location":"example/era5.html","page":"An Example with ERA5 Precipitable Water Data","title":"An Example with ERA5 Precipitable Water Data","text":"pplt.close(); f2,a2 = pplt.subplots(aspect=68/33,axwidth=4)\nc = a2[1].contourf(glon,glat,newpwv',levels=10:5:60,extend=\"both\",cmap=\"viridis\")\na2[1].plot(x,y,c=\"k\",lw=0.5)\na2[1].plot(slon,slat,label=\"Shape (slon,slat)\",legend=\"b\",legend_kw=Dict(\"ncol\"=>2,\"frame\"=>false))\na2[1].plot(blon,blat,label=\"Bound (blon,blat)\",legend=\"b\",linestyle=\":\")\na2[1].format(\n    xlim=(90,158),xlabel=L\"Longitude / $\\degree$\",\n    ylim=(-12,21),ylabel=L\"Latitude / $\\degree$\",\n    suptitle=\"Precipitable Water Vapour (AR6_SEA)\"\n)\na2[1].colorbar(c,loc=\"r\")","category":"page"},{"location":"example/era5.html","page":"An Example with ERA5 Precipitable Water Data","title":"An Example with ERA5 Precipitable Water Data","text":"(Image: SEA)","category":"page"},{"location":"regiongrids/create.html#From-GeoRegions-to-RegionGrid","page":"Creating RegionGrids","title":"From GeoRegions to RegionGrid","text":"","category":"section"},{"location":"regiongrids/create.html","page":"Creating RegionGrids","title":"Creating RegionGrids","text":"In this section, we go through the basic steps of creating a RegionGrid for RectRegions and PolyRegions.  See if you can spot the differences between the RegionGrids generated by the two different types.","category":"page"},{"location":"regiongrids/create.html#Setup","page":"Creating RegionGrids","title":"Setup","text":"","category":"section"},{"location":"regiongrids/create.html","page":"Creating RegionGrids","title":"Creating RegionGrids","text":"using GeoRegions\nusing DelimitedFiles\nusing CairoMakie\n\ndownload(\"https://raw.githubusercontent.com/natgeo-wong/GeoPlottingData/main/coastline_resl.txt\",\"coast.cst\")\ncoast = readdlm(\"coast.cst\",comments=true)\nclon  = coast[:,1]\nclat  = coast[:,2]\nnothing","category":"page"},{"location":"regiongrids/create.html#RectGrid-Example","page":"Creating RegionGrids","title":"RectGrid Example","text":"","category":"section"},{"location":"regiongrids/create.html","page":"Creating RegionGrids","title":"Creating RegionGrids","text":"geo  = GeoRegion(\"GF_SSA\")\nlon  = -180:5:180\nlat  = -90:5:90\nggrd = RegionGrid(geo,lon[1:(end-1)],lat)","category":"page"},{"location":"regiongrids/create.html#PolyGrid-Example","page":"Creating RegionGrids","title":"PolyGrid Example","text":"","category":"section"},{"location":"regiongrids/create.html","page":"Creating RegionGrids","title":"Creating RegionGrids","text":"geo  = GeoRegion(\"AR6_NWS\")\nlon  = -180:2:180;\nlat  = -90:2:90;\nggrd = RegionGrid(geo,lon[1:(end-1)],lat)","category":"page"},{"location":"regiongrids/create.html","page":"Creating RegionGrids","title":"Creating RegionGrids","text":"So here, we see that in this PolyGrid example, the RegionGrid contains an additional field mask that, within the rectilinear longitude-latitude shape bounding the GeoRegion (because gridded data here is assumed to be rectilinear), the data is within the GeoRegion.  Values of 1 indicate it is within the GeoRegion, otherwise the values are `NaN.","category":"page"},{"location":"regiongrids/create.html","page":"Creating RegionGrids","title":"Creating RegionGrids","text":"ggrd.mask","category":"page"},{"location":"regiongrids/create.html#The-Mask-of-a-PolyGrid","page":"Creating RegionGrids","title":"The Mask of a PolyGrid","text":"","category":"section"},{"location":"regiongrids/create.html","page":"Creating RegionGrids","title":"Creating RegionGrids","text":"The PolyGrid type derived from a PolyRegion allows us to apply a mask to filter out data that is within the shape of a PolyRegion on a rectilinear lon-lat grid defined by the bound of a PolyRegion.  We consider the following example of an AR6 region over South Asia:","category":"page"},{"location":"regiongrids/create.html","page":"Creating RegionGrids","title":"Creating RegionGrids","text":"geo  = GeoRegion(\"AR6_SAS\")\nlon  = -180:5:180;\nlat  = -90:2:90;\nggrd = RegionGrid(geo,lon[1:(end-1)],lat)","category":"page"},{"location":"regiongrids/create.html","page":"Creating RegionGrids","title":"Creating RegionGrids","text":"And using the field mask, we plot the points that are in the region (blue), and out of the region (red).","category":"page"},{"location":"regiongrids/create.html","page":"Creating RegionGrids","title":"Creating RegionGrids","text":"mask = ggrd.mask\ngrid = ones(size(mask))\ninlon = grid .* ggrd.lon;  inlon = inlon[.!isnan.(mask)]\ninlat = grid .* ggrd.lat'; inlat = inlat[.!isnan.(mask)]\notlon = grid .* ggrd.lon;  otlon = otlon[isnan.(mask)]\notlat = grid .* ggrd.lat'; otlat = otlat[isnan.(mask)]\nblon,blat,slon,slat = coordGeoRegion(geo)\n\nfig = Figure()\naspect = (maximum(slon)-minimum(slon))/(maximum(slat)-minimum(slat))\nax = Axis(\n    fig[1,1],width=750,height=750/aspect,\n    limits=(minimum(slon)-2,maximum(slon)+2,minimum(slat)-2,maximum(slat)+2)\n)\n\nlines!(ax,clon,clat,color=:black)\nlines!(ax,blon,blat)\nlines!(ax,slon,slat)\nscatter!(ax,otlon,otlat)\nscatter!(ax,inlon,inlat)\n\nresize_to_layout!(fig)\nfig","category":"page"},{"location":"regiongrids/create.html#API","page":"Creating RegionGrids","title":"API","text":"","category":"section"},{"location":"regiongrids/create.html","page":"Creating RegionGrids","title":"Creating RegionGrids","text":"RegionGrid(::RectRegion,::Vector{<:Real},::Vector{<:Real})\nRegionGrid(::GeoRegion,::Array{<:Real,2},::Array{<:Real,2})","category":"page"},{"location":"regiongrids/create.html#GeoRegions.RegionGrid-Tuple{RectRegion, Vector{<:Real}, Vector{<:Real}}","page":"Creating RegionGrids","title":"GeoRegions.RegionGrid","text":"RegionGrid(\n    geo :: GeoRegion,\n    lon :: Union{Vector{<:Real},AbstractRange{<:Real},\n    lat :: Union{Vector{<:Real},AbstractRange{<:Real}\n) -> RectGrid, PolyGrid\n\nCreates a RectGrid or PolyGrid type based on the following arguments. This method is suitable for rectilinear grids of longitude/latitude output such as from Isca, or from satellite and reanalysis gridded datasets.\n\nArguments\n\ngeo : A GeoRegion of interest\nlon : A vector or AbstractRange containing the longitude points\nlat : A vector or AbstractRange containing the latitude points\n\n\n\n\n\n","category":"method"},{"location":"regiongrids/create.html#GeoRegions.RegionGrid-Tuple{GeoRegion, Matrix{<:Real}, Matrix{<:Real}}","page":"Creating RegionGrids","title":"GeoRegions.RegionGrid","text":"RegionGrid(\n    geo :: GeoRegion,\n    lon :: Array{<:Real,2},\n    lat :: Array{<:Real,2}\n) -> RegionGrid\n\nCreates a RegionMask type based on the following arguments. This method is more suitable for non-rectilinear grids of longitude and latitude points, such as in the output of WRF or CESM.\n\nArguments\n\ngeo : A GeoRegion of interest\nlon : An array containing the longitude points\nlat : An array containing the latitude points\n\n\n\n\n\n","category":"method"},{"location":"regiongrids/create.html","page":"Creating RegionGrids","title":"Creating RegionGrids","text":"","category":"page"},{"location":"regiongrids/create.html","page":"Creating RegionGrids","title":"Creating RegionGrids","text":"This page was generated using Literate.jl.","category":"page"},{"location":"using/isin.html","page":"Is it in a GeoRegion?","title":"Is it in a GeoRegion?","text":"EditURL = \"https://github.com/JuliaClimate/GeoRegions.jl/blob/main/docs/literate/using/isin.jl\"","category":"page"},{"location":"using/isin.html#Is-it-in-a-GeoRegion?","page":"Is it in a GeoRegion?","title":"Is it in a GeoRegion?","text":"","category":"section"},{"location":"using/isin.html","page":"Is it in a GeoRegion?","title":"Is it in a GeoRegion?","text":"When dealing with geographic data, we often wish to check if a point or region is inside another region.  GeoRegions.jl allows you to perform this check easily with the function isinGeoRegion.","category":"page"},{"location":"using/isin.html","page":"Is it in a GeoRegion?","title":"Is it in a GeoRegion?","text":"note: Point Type\nWe use the Point2 Type from the package GeometryBasics.jl, which is reexported by GeoRegions.jl, as an easy way to denote points.  This also allows us to use the package PolygonOps.jl to determine if a point is inside a region.","category":"page"},{"location":"using/isin.html#Setup","page":"Is it in a GeoRegion?","title":"Setup","text":"","category":"section"},{"location":"using/isin.html","page":"Is it in a GeoRegion?","title":"Is it in a GeoRegion?","text":"using GeoRegions\nusing DelimitedFiles\nusing CairoMakie\n\ndownload(\"https://raw.githubusercontent.com/natgeo-wong/GeoPlottingData/main/coastline_resl.txt\",\"coast.cst\")\ncoast = readdlm(\"coast.cst\",comments=true)\nclon  = coast[:,1]\nclat  = coast[:,2]\nnothing","category":"page"},{"location":"using/isin.html#Is-a-Point-in-a-GeoRegion?","page":"Is it in a GeoRegion?","title":"Is a Point in a GeoRegion?","text":"","category":"section"},{"location":"using/isin.html","page":"Is it in a GeoRegion?","title":"Is it in a GeoRegion?","text":"As an example, let us test if a point is in GeoRegion AR6_EAO, defined in the blue bounding box below.  We define the below points:","category":"page"},{"location":"using/isin.html","page":"Is it in a GeoRegion?","title":"Is it in a GeoRegion?","text":"Point A at coordinates (-20,5)\nPoint B at coordinates (340,5)\nPoint C at coordinates (30,15)","category":"page"},{"location":"using/isin.html","page":"Is it in a GeoRegion?","title":"Is it in a GeoRegion?","text":"A = Point2(-20,5)\nB = Point2(340,5)\nC = Point2(-45,-7.5)\ngeo = GeoRegion(\"AR6_EAO\")","category":"page"},{"location":"using/isin.html","page":"Is it in a GeoRegion?","title":"Is it in a GeoRegion?","text":"Here, we note that the coordinates of the GeoRegion (Equatorial Atlantic Ocean) are given in the bounds of (-180,180).  It is trivial in this case to calculate if points A and C are within the bounds of the GeoRegion.","category":"page"},{"location":"using/isin.html","page":"Is it in a GeoRegion?","title":"Is it in a GeoRegion?","text":"_,_,slon,slat = coordGeoRegion(geo)\naspect = (maximum(slon)-minimum(slon))/(maximum(slat)-minimum(slat))\nfig = Figure()\nax = Axis(\n    fig[1,1],width=750,height=750/aspect,\n    limits=(minimum(slon)-2,maximum(slon)+2,minimum(slat)-2,maximum(slat)+2)\n)\nlines!(ax,clon,clat,color=:black,linewidth=3)\nlines!(ax,slon,slat,linewidth=5)\nscatter!(ax,A,markersize=20)\nscatter!(ax,C,markersize=20)\nresize_to_layout!(fig)\nfig","category":"page"},{"location":"using/isin.html","page":"Is it in a GeoRegion?","title":"Is it in a GeoRegion?","text":"By eye it is easy to see that Point A is inside the GeoRegion.  However, C is not.  Let us now see if we are able to corroborate this with GeoRegions.jl using the function isinGeoRegion()","category":"page"},{"location":"using/isin.html","page":"Is it in a GeoRegion?","title":"Is it in a GeoRegion?","text":"(\n    isinGeoRegion(A,geo,throw=false), # Point A\n    isinGeoRegion(C,geo,throw=false) # Point C\n)","category":"page"},{"location":"using/isin.html","page":"Is it in a GeoRegion?","title":"Is it in a GeoRegion?","text":"But what about Point B?  Point B is also very obvious within the bounds of the GeoRegion, it is simply that the longitude of Point A is shifted by 360º such that it is now in the (0,360) coordinates frame.  We see that this is of no concern to GeoRegions.jl, which can detect that it is within the bounds of the GeoRegion anyway.","category":"page"},{"location":"using/isin.html","page":"Is it in a GeoRegion?","title":"Is it in a GeoRegion?","text":"isinGeoRegion(B,geo,throw=false)","category":"page"},{"location":"using/isin.html#Is-a-GeoRegion-inside-a-GeoRegion?","page":"Is it in a GeoRegion?","title":"Is a GeoRegion inside a GeoRegion?","text":"","category":"section"},{"location":"using/isin.html","page":"Is it in a GeoRegion?","title":"Is it in a GeoRegion?","text":"Since any arbitrary geographic region can be defined as a GeoRegion, the natural extension now is to determine if a GeoRegion is wholly within another GeoRegion.","category":"page"},{"location":"using/isin.html","page":"Is it in a GeoRegion?","title":"Is it in a GeoRegion?","text":"Let us consider an arbitrary GeoRegion BIG, and other smaller GeoRegions TS1-4 as defined below, and plot them on a map.","category":"page"},{"location":"using/isin.html","page":"Is it in a GeoRegion?","title":"Is it in a GeoRegion?","text":"geo_BIG = PolyRegion(\n    \"BIG\",\"GLB\",\"A Big Region\",\n    [-120,-100,-100,-80,-30,15,45,75,90,115,120,105,85,45,20,-5,-45,-80,-120],\n    [0,10,30,50,40,50,55,44,32,30,12,8,5,0,-10,-30,-40,-43,0]\n)\ngeo_TS1 = RectRegion(\"TS1\",\"GLB\",\"Test Region 1\",[45,20,20,-70])\ngeo_TS2 = PolyRegion(\"TS2\",\"GLB\",\"Test Region 2\",[60,90,110,90,60],[20,25,20,15,20])\ngeo_TS3 = PolyRegion(\n    \"TS3\",\"GLB\",\"Test Region 3\",\n    [-110,-98,-95,-90,-80,-100,-110,-110],\n    [0,10,20,15,5,0,-20,0]\n)\ngeo_TS4 = PolyRegion(\n    \"TS4\",\"GLB\",\"Test Region 4\",\n    [300,325,330,355,330,325,320,300],\n    [-10,-5,0,-10,-30,-35,-20,-10]\n)\n\nblon_b,blat_b,slon_b,slat_b = coordGeoRegion(geo_BIG)\n              slon_1,slat_1 = coordGeoRegion(geo_TS1)\nblon_2,blat_2,slon_2,slat_2 = coordGeoRegion(geo_TS2)\nblon_3,blat_3,slon_3,slat_3 = coordGeoRegion(geo_TS3)\nblon_4,blat_4,slon_4,slat_4 = coordGeoRegion(geo_TS4)\n\nfig = Figure()\n\nax = Axis(\n    fig[1,1],width=750,height=750/2,\n    limits=(-180,180,-90,90)\n)\n\nlines!(ax,clon,clat,color=:black,linewidth=3)\nlines!(ax,blon_b,blat_b,linewidth=5,color=:blue,linestyle=:dot)\nlines!(ax,slon_b,slat_b,linewidth=5,color=:blue)\nlines!(ax,slon_1,slat_1,linewidth=5,color=:red)\nlines!(ax,blon_2,blat_2,linewidth=5,color=:green,linestyle=:dot)\nlines!(ax,slon_2,slat_2,linewidth=5,color=:green)\nlines!(ax,blon_3,blat_3,linewidth=5,color=:red,linestyle=:dot)\nlines!(ax,slon_3,slat_3,linewidth=5,color=:red)\nlines!(ax,blon_4.-360,blat_4,linewidth=5,color=:green,linestyle=:dot)\nlines!(ax,slon_4.-360,slat_4,linewidth=5,color=:green)\n\nresize_to_layout!(fig)\nfig","category":"page"},{"location":"using/isin.html","page":"Is it in a GeoRegion?","title":"Is it in a GeoRegion?","text":"We see by eye that GeoRegion TS2 and TS4 are in the BIG region, but the other GeoRegions are not.  Now let us verify this with isinGeoRegion()","category":"page"},{"location":"using/isin.html","page":"Is it in a GeoRegion?","title":"Is it in a GeoRegion?","text":"(\n    isinGeoRegion(geo_TS1,geo_BIG,throw=false),\n    isinGeoRegion(geo_TS2,geo_BIG,throw=false),\n    isinGeoRegion(geo_TS3,geo_BIG,throw=false),\n    isinGeoRegion(geo_TS4,geo_BIG,throw=false)\n)","category":"page"},{"location":"using/isin.html","page":"Is it in a GeoRegion?","title":"Is it in a GeoRegion?","text":"And we see that this is indeed the case.","category":"page"},{"location":"using/isin.html#API","page":"Is it in a GeoRegion?","title":"API","text":"","category":"section"},{"location":"using/isin.html","page":"Is it in a GeoRegion?","title":"Is it in a GeoRegion?","text":"isinGeoRegion(\n    Point  :: Point2{<:Real},\n    geo    :: RectRegion;\n)\nisinGeoRegion(::GeoRegion,::RectRegion)\nisinGeoRegion(::GeoRegion,::PolyRegion)","category":"page"},{"location":"using/isin.html#GeoRegions.isinGeoRegion-Tuple{Point2{<:Real}, RectRegion}","page":"Is it in a GeoRegion?","title":"GeoRegions.isinGeoRegion","text":"isinGeoRegion(\n    Point  :: Point2{<:Real},\n    geo    :: GeoRegion;\n    tlon   :: Real = 0,\n    tlat   :: Real = 0,\n    throw  :: Bool = true\n) -> Bool\n\nCheck if a geographical point Point is within a GeoRegion defined by geo.\n\nArguments\n\nPoint : A geographical point of Type Point2.  Pass Point2(plon,plat), where plon and plat are the longitude and latitudes of the point.\ngeo   : The GeoRegion struct container\n\nKeyword Arguments\n\ntlon  : Threshold for the longitude bound\ntlat  : Threshold for the latitude bound\nthrow : If true, then if Point is not within geo, an error is thrown and the program stops running.\n\n\n\n\n\n","category":"method"},{"location":"using/isin.html#GeoRegions.isinGeoRegion-Tuple{GeoRegion, RectRegion}","page":"Is it in a GeoRegion?","title":"GeoRegions.isinGeoRegion","text":"isinGeoRegion(\n    Child  :: GeoRegion,\n    rectG  :: RectRegion;\n    throw  :: Bool = true\n) -> Bool\n\nCheck if a child GeoRegion defined by Child is within a RectRegion rectG.\n\nArguments\n\nChild : A GeoRegion that we postulate to be a \"child\", or a subset of the GeoRegion defined by polyG\npolyG : A GeoRegion that we postulate to be a \"parent\", or containing the GeoRegion defined by Child\n\nKeyword Arguments\n\nthrow  : If true, then if Child is not within polyG, an error is thrown and the program stops running\n\n\n\n\n\n","category":"method"},{"location":"using/isin.html#GeoRegions.isinGeoRegion-Tuple{GeoRegion, PolyRegion}","page":"Is it in a GeoRegion?","title":"GeoRegions.isinGeoRegion","text":"isinGeoRegion(\n    Child  :: GeoRegion,\n    polyG  :: PolyRegion;\n    domask :: Bool = false,\n    throw  :: Bool = true\n) -> Bool\n\nCheck if a child GeoRegion defined by Child is within a PolyRegion polyG.\n\nArguments\n\nChild : A GeoRegion that we postulate to be a \"child\", or a subset of the GeoRegion defined by polyG\npolyG : A GeoRegion that we postulate to be a \"parent\", or containing the GeoRegion defined by Child\n\nKeyword Arguments\n\nthrow  : If true, then if Child is not within polyG, an error is thrown and the program stops running\ndomask : If throw is false and domask is true, return a mask (with bounds defined by the Child GeoRegion) showing the region where Child and polyG do not overlap\n\n\n\n\n\n","category":"method"},{"location":"using/isin.html","page":"Is it in a GeoRegion?","title":"Is it in a GeoRegion?","text":"","category":"page"},{"location":"using/isin.html","page":"Is it in a GeoRegion?","title":"Is it in a GeoRegion?","text":"This page was generated using Literate.jl.","category":"page"},{"location":"lists/default.html#Default-List-of-All-Predefined-GeoRegions","page":"Default","title":"Default List of All Predefined GeoRegions","text":"","category":"section"},{"location":"lists/default.html","page":"Default","title":"Default","text":"using GeoRegions\nresetGeoRegions(allfiles=true)\ntableGeoRegions()","category":"page"},{"location":"georegions/predefined.html#List-of-Available-GeoRegions","page":"Predefined GeoRegions","title":"List of Available GeoRegions","text":"","category":"section"},{"location":"georegions/predefined.html","page":"Predefined GeoRegions","title":"Predefined GeoRegions","text":"This page contains a list of the GeoRegions that are currently available in GeoRegions.jl.","category":"page"},{"location":"georegions/predefined.html","page":"Predefined GeoRegions","title":"Predefined GeoRegions","text":"The default GeoRegion covers the global domain identified as GLB","category":"page"},{"location":"georegions/predefined.html","page":"Predefined GeoRegions","title":"Predefined GeoRegions","text":"using GeoRegions\nGeoRegion(\"GLB\")","category":"page"},{"location":"georegions/predefined.html#Adapted-from-Giorgi-and-Francisco-[2000]","page":"Predefined GeoRegions","title":"Adapted from Giorgi & Francisco [2000]","text":"","category":"section"},{"location":"georegions/predefined.html","page":"Predefined GeoRegions","title":"Predefined GeoRegions","text":"Add the GF_ prefix to the 3-letter IDs given in Giorgi & Francisco [2000] to call GeoRegions adapted from this paper.  All GeoRegions are defined as the RectRegion type.","category":"page"},{"location":"georegions/predefined.html","page":"Predefined GeoRegions","title":"Predefined GeoRegions","text":"compat: Defined in GeoRegions > 1.1\nAll GF_* domains are defined only in versions ≥1.1","category":"page"},{"location":"georegions/predefined.html","page":"Predefined GeoRegions","title":"Predefined GeoRegions","text":"using GeoRegions\nGeoRegion(\"GF_WAF\")","category":"page"},{"location":"georegions/predefined.html#SREX-Regions-adapted-from-Seneviratne-et-al.-[2012]","page":"Predefined GeoRegions","title":"SREX Regions adapted from Seneviratne et al. [2012]","text":"","category":"section"},{"location":"georegions/predefined.html","page":"Predefined GeoRegions","title":"Predefined GeoRegions","text":"Add the SRX_ prefix to the 3-letter IDs given in Seneviratne et al. [2012] to call GeoRegions adapted from this paper.  All GeoRegions are defined as the PolyRegion type, even though many of them are rectilinear.","category":"page"},{"location":"georegions/predefined.html","page":"Predefined GeoRegions","title":"Predefined GeoRegions","text":"compat: Defined in GeoRegions ≧ 2\nAll SRX_* domains are defined only in versions ≥2","category":"page"},{"location":"georegions/predefined.html","page":"Predefined GeoRegions","title":"Predefined GeoRegions","text":"using GeoRegions\nGeoRegion(\"SRX_CNA\")","category":"page"},{"location":"georegions/predefined.html#AR6-Regions-adapted-from-Iturbide-et-al.,-[2020]","page":"Predefined GeoRegions","title":"AR6 Regions adapted from Iturbide et al., [2020]","text":"","category":"section"},{"location":"georegions/predefined.html","page":"Predefined GeoRegions","title":"Predefined GeoRegions","text":"Add the AR6_ prefix to the 3-letter IDs given in Iturbide et al., [2020] to call GeoRegions adapted from this paper.  All GeoRegions are defined as the PolyRegion type.","category":"page"},{"location":"georegions/predefined.html","page":"Predefined GeoRegions","title":"Predefined GeoRegions","text":"compat: Defined in GeoRegions ≧ 2\nAll AR6_* domains are defined only in versions ≥2","category":"page"},{"location":"georegions/predefined.html","page":"Predefined GeoRegions","title":"Predefined GeoRegions","text":"using GeoRegions\nGeoRegion(\"AR6_EAS\")","category":"page"},{"location":"using/custom.html","page":"Custom GeoRegions","title":"Custom GeoRegions","text":"EditURL = \"https://github.com/JuliaClimate/GeoRegions.jl/blob/main/docs/literate/using/custom.jl\"","category":"page"},{"location":"using/custom.html#Adding-GeoRegions-from-Templates","page":"Custom GeoRegions","title":"Adding GeoRegions from Templates","text":"","category":"section"},{"location":"using/custom.html","page":"Custom GeoRegions","title":"Custom GeoRegions","text":"So you have a list of areas that you want to define, but you don't want to enter them in one by one.  What to do?### Setup","category":"page"},{"location":"using/custom.html","page":"Custom GeoRegions","title":"Custom GeoRegions","text":"using GeoRegions","category":"page"},{"location":"using/custom.html#Template-GeoRegion-Files","page":"Custom GeoRegions","title":"Template GeoRegion Files","text":"","category":"section"},{"location":"using/custom.html","page":"Custom GeoRegions","title":"Custom GeoRegions","text":"Fear not!  I have template files that one can use to define RectRegions and PolyRegions.  Simply use the templateGeoRegion() to copy the templates into a directory of your choice.","category":"page"},{"location":"using/custom.html","page":"Custom GeoRegions","title":"Custom GeoRegions","text":"note: Defining PolyRegions\nWhen defining PolyRegions, the first and last set of (lon,lat) coordinates must be the same (i.e. a closed polygon must be defined)","category":"page"},{"location":"using/custom.html","page":"Custom GeoRegions","title":"Custom GeoRegions","text":"templateGeoRegion(\"your-file-path-here\")","category":"page"},{"location":"using/custom.html","page":"Custom GeoRegions","title":"Custom GeoRegions","text":"templateGeoRegions","category":"page"},{"location":"using/custom.html#GeoRegions.templateGeoRegions","page":"Custom GeoRegions","title":"GeoRegions.templateGeoRegions","text":"templateGeoRegions(; path::AbstractString, overwrite::Bool=false)\n\nCopies the template files for defining GeoRegions in textfiles, that can then be added as a batch using addGeoRegions()\n\nKeyword Arguments\n\npath      : The folder to copy the files to\noverwrite : If template files exist in this folder, overwrite?\n\n\n\n\n\n","category":"function"},{"location":"using/custom.html#Reading-in-GeoRegions-from-a-custom-file","page":"Custom GeoRegions","title":"Reading in GeoRegions from a custom file","text":"","category":"section"},{"location":"using/custom.html","page":"Custom GeoRegions","title":"Custom GeoRegions","text":"We can then read in GeoRegions from your custom file using the function addGeoRegions(), which will then read all the GeoRegion information in the file and add it to the list of GeoRegions.","category":"page"},{"location":"using/custom.html","page":"Custom GeoRegions","title":"Custom GeoRegions","text":"addGeoRegions(\"recttest.txt\")\nGeoRegion(\"TRP\")","category":"page"},{"location":"using/custom.html","page":"Custom GeoRegions","title":"Custom GeoRegions","text":"addGeoRegions","category":"page"},{"location":"using/custom.html#GeoRegions.addGeoRegions","page":"Custom GeoRegions","title":"GeoRegions.addGeoRegions","text":"addGeoRegions(fname::AbstractString)\n\nExtracts information of the GeoRegion with the ID RegID.  If no GeoRegion with this ID exists, an error is thrown.\n\nArguments\n\nfname : name + path of the file containing GeoRegion information\n\n\n\n\n\n","category":"function"},{"location":"using/custom.html#Reset-the-list-of-GeoRegions","page":"Custom GeoRegions","title":"Reset the list of GeoRegions","text":"","category":"section"},{"location":"using/custom.html","page":"Custom GeoRegions","title":"Custom GeoRegions","text":"Should one wish to entirely reset the list of GeoRegions, one can call resetGeoRegions():","category":"page"},{"location":"using/custom.html","page":"Custom GeoRegions","title":"Custom GeoRegions","text":"resetGeoRegions()","category":"page"},{"location":"using/custom.html","page":"Custom GeoRegions","title":"Custom GeoRegions","text":"And if one wishes to reset the predefined list of GeoRegions, we can do:","category":"page"},{"location":"using/custom.html","page":"Custom GeoRegions","title":"Custom GeoRegions","text":"resetGeoRegions(allfiles=true)","category":"page"},{"location":"using/custom.html","page":"Custom GeoRegions","title":"Custom GeoRegions","text":"resetGeoRegions","category":"page"},{"location":"using/custom.html#GeoRegions.resetGeoRegions","page":"Custom GeoRegions","title":"GeoRegions.resetGeoRegions","text":"resetGeoRegions(; allfiles::Bool = false)\n\nReset all the files containing GeoRegion information back to the default.\n\nArguments\n\nallfiles : If true, reset the GeoRegions defined in Giorgi & Francisco [2000], AR6 Regions (Iturbide et al., 2020; ESSD) and Seneviratne et al. [2012] as well.  If false, only reset the custom GeoRegions.\n\n\n\n\n\n","category":"function"},{"location":"using/custom.html","page":"Custom GeoRegions","title":"Custom GeoRegions","text":"","category":"page"},{"location":"using/custom.html","page":"Custom GeoRegions","title":"Custom GeoRegions","text":"This page was generated using Literate.jl.","category":"page"},{"location":"lists/api.html#Tabular-Listings-of-GeoRegions","page":"API","title":"Tabular Listings of GeoRegions","text":"","category":"section"},{"location":"lists/api.html","page":"API","title":"API","text":"A list of GeoRegions and their basic properties can be called using the function tableGeoRegions(), which lists all available GeoRegions, both predefined and custom/user-defined.","category":"page"},{"location":"lists/api.html","page":"API","title":"API","text":"using GeoRegions\nresetGeoRegions(allfiles=true)\ntableGeoRegions(onlycustom=true)","category":"page"},{"location":"lists/api.html","page":"API","title":"API","text":"tableGeoRegions(; onlycustom::Bool)","category":"page"},{"location":"lists/api.html#GeoRegions.tableGeoRegions-Tuple{}","page":"API","title":"GeoRegions.tableGeoRegions","text":"tableGeoRegions(; onlycustom::Bool) -> nothing\n\nDisplay all available GeoRegions in tabular format.\n\nKeyword Arguments\n\nonlycustom : If true, only custom, user-defined GeoRegions will be displayed. To show all available GeoRegions (including predefined GeoRegions), set onlycustom to false\n\n\n\n\n\n","category":"method"},{"location":"lists/api.html#More-specific-lists-of-GeoRegions","page":"API","title":"More specific lists of GeoRegions","text":"","category":"section"},{"location":"lists/api.html","page":"API","title":"API","text":"Besides listing all available GeoRegions, it is also possible to list a variety of different specifications of GeoRegions with the tableGeoRegions() function, as well as tableRectRegions() and tablePolyRegions().","category":"page"},{"location":"lists/api.html","page":"API","title":"API","text":"tableRectRegions\ntablePolyRegions","category":"page"},{"location":"lists/api.html#GeoRegions.tableRectRegions","page":"API","title":"GeoRegions.tableRectRegions","text":"tableRectRegions(;\n    custom :: Bool = true,\n    giorgi :: Bool = false\n) -> nothing\n\nDisplay all available RectRegions in tabular format.\n\nKeyword Arguments\n\ncustom : If true, display custom user-defined GeoRegions. Default is true\ngiorgi : If true, display Giorgi predefined GeoRegions. Default is false\n\n\n\n\n\n","category":"function"},{"location":"lists/api.html#GeoRegions.tablePolyRegions","page":"API","title":"GeoRegions.tablePolyRegions","text":"tablePolyRegions(;\n    custom :: Bool = true,\n    srex :: Bool = false,\n    ar6  :: Bool = false\n) -> nothing\n\nDisplay all available PolyRegions in tabular format.\n\nKeyword Arguments\n\ncustom : If true, display custom user-defined GeoRegions. Default is true\nsrex : If true, display SREX predefined GeoRegions. Default is false\nar6 : If true, display IPCC AR6 predefined GeoRegions. Default is false\n\n\n\n\n\n","category":"function"},{"location":"lists/api.html#Listing-GeoRegions-inside-a-Custom-File","page":"API","title":"Listing GeoRegions inside a Custom File","text":"","category":"section"},{"location":"lists/api.html","page":"API","title":"API","text":"Similarly, it is also possible to list the GeoRegions in custom files. The template for these files can be retrieved using the function templateGeoRegions()","category":"page"},{"location":"lists/api.html","page":"API","title":"API","text":"tableGeoRegions(fname::AbstractString)","category":"page"},{"location":"lists/api.html#GeoRegions.tableGeoRegions-Tuple{AbstractString}","page":"API","title":"GeoRegions.tableGeoRegions","text":"tableGeoRegions(fname::AbstractString) -> nothing\n\nDisplay all available GeoRegions in tabular format.\n\nKeyword Arguments\n\nonlycustom : If true, only custom, user-defined GeoRegions will be displayed. To show all available GeoRegions (including predefined GeoRegions), set onlycustom to false\n\n\n\n\n\n","category":"method"},{"location":"example/placeholder.html#Examples-for-using-GeoRegions.jl","page":"Examples","title":"Examples for using GeoRegions.jl","text":"","category":"section"},{"location":"example/placeholder.html","page":"Examples","title":"Examples","text":"Coming soon ...","category":"page"},{"location":"api.html#Application-Programming-Interface-(APIs)","page":"Application Programming Interface (APIs)","title":"Application Programming Interface (APIs)","text":"","category":"section"},{"location":"api.html","page":"Application Programming Interface (APIs)","title":"Application Programming Interface (APIs)","text":"This page contains a brief description of the functions not covered in the tutorials.  I aim to describe what the functions do, their arguments, and what is returned.","category":"page"},{"location":"api.html","page":"Application Programming Interface (APIs)","title":"Application Programming Interface (APIs)","text":"GeoRegions.checkpoint\nGeoRegions.checkgrid","category":"page"},{"location":"api.html#GeoRegions.checkpoint","page":"Application Programming Interface (APIs)","title":"GeoRegions.checkpoint","text":"checkpoint(plon, plat, rN, rS, rE, rW, tlon, tlat, throw) -> Bool\n\nCheck if a point with longitude and latitude coordinates plon and plat is found within a region defined by the bounds [rN,rS,rE,rW] format, with tlon and tlat being the threshold/margin of error for the longitude and latitude respectively.\n\nArguments:\n\nplon::Real : Longitude of the point in question.\nplat::Real : Latitude of the point in question.\nrN::Real : North bound of region\nrS::Real : South bound of region\nrE::Real : East bound of region\nrW::Real : West bound of region\ntlon::Real : Threshold for longitude bounds in °.  If set to 0, means that there is no leniency for the point to fall outside the longitude bounds\ntlat::Real : Threshold for latitude bounds in °.  If set to 0, means that there is no leniency for the point to fall outside the latitude bounds\nthrow::Bool : If throw=true, then if (plon,plat) is not within the region, an error is thrown and the program stops running.\n\n\n\n\n\n","category":"function"},{"location":"api.html#GeoRegions.checkgrid","page":"Application Programming Interface (APIs)","title":"GeoRegions.checkgrid","text":"checkgrid(gN, gS, gE, gW, rN, rS, rE, rW, tlon, tlat, throw) -> Bool\n\nCheck if a grid with bounds [gN,gS,gE,gW] is found within a region defined by the bounds [rN,rS,rE,rW] format, with tlon and tlat being the threshold/margin of error for the longitude and latitude respectively.\n\nArguments:\n\ngN::Real : North bound of grid\ngS::Real : South bound of grid\ngE::Real : East bound of grid\ngW::Real : West bound of grid\nrN::Real : North bound of region\nrS::Real : South bound of region\nrE::Real : East bound of region\nrW::Real : West bound of region\ntlon::Real : Threshold for longitude bounds in °.  If set to 0, means that there is no leniency for the point to fall outside the longitude bounds\ntlat::Real : Threshold for latitude bounds in °.  If set to 0, means that there is no leniency for the point to fall outside the latitude bounds\nthrow::Bool : If throw=true, then if (plon,plat) is not within the region, an error is thrown and the program stops running.\n\n\n\n\n\n","category":"function"},{"location":"georegions/intro.html#What-is-a-GeoRegion?","page":"What is a GeoRegion?","title":"What is a GeoRegion?","text":"","category":"section"},{"location":"georegions/intro.html","page":"What is a GeoRegion?","title":"What is a GeoRegion?","text":"Simply put, a GeoRegion is a geographic region.  In v1 of GeoRegions.jl, a GeoRegion could only be rectilinear in shape.  However, as of GeoRegions.jl v2, we use Julia types to differentiate between rectilinear GeoRegions, and GeoRegions of arbitrary polygonal shape:","category":"page"},{"location":"georegions/intro.html","page":"What is a GeoRegion?","title":"What is a GeoRegion?","text":"Rectilinear GeoRegions are denoted by the RectRegion type\nPolygonal GeoRegions are denoted by the PolyRegion type","category":"page"},{"location":"georegions/intro.html","page":"What is a GeoRegion?","title":"What is a GeoRegion?","text":"The main difference between a PolyRegion and a RectRegion, is that a PolyRegion also contains a mask field which allows us to extract a data field of a polygonal shape from the rectilinear bounds that are the natural result of a rectilinear grid.","category":"page"},{"location":"georegions/intro.html","page":"What is a GeoRegion?","title":"What is a GeoRegion?","text":"GeoRegion","category":"page"},{"location":"georegions/intro.html#GeoRegions.GeoRegion","page":"What is a GeoRegion?","title":"GeoRegions.GeoRegion","text":"GeoRegion\n\nAbstract supertype for geographical regions, with the following subtypes:\n\nRectRegion{ST<:AbstractString, FT<:Real} <: GeoRegion\nPolyRegion{ST<:AbstractString, FT<:Real} <: GeoRegion\n\nBoth RectRegion and PolyRegion types contain the following fields:\n\nID - A String Type, the identifier for the GeoRegion\npID - A String Type, the identifier for the parent GeoRegion\nname - A String Type, the full name of the GeoRegion\nN - A Float Type, the north boundary of the GeoRegion\nS - A Float Type, the south boundary of the GeoRegion\nE - A Float Type, the east boundary of the GeoRegion\nW - A Float Type, the est boundary of the GeoRegion\nis180 - A Bool Type, is W < 0\nis360 - A Bool Type, is E > 180\n\nA PolyRegion type will also contain the following field:\n\nshape - A vector of Point2 Types, defining a non-rectilinear shape of the GeoRegion\n\n\n\n\n\n","category":"type"},{"location":"georegions/intro.html","page":"What is a GeoRegion?","title":"What is a GeoRegion?","text":"In essence, a GeoRegion is:","category":"page"},{"location":"georegions/intro.html","page":"What is a GeoRegion?","title":"What is a GeoRegion?","text":"a geographical region that can be either rectilinear region, or a polygonal shape within a specified rectilinear bound.\nidentified by an ID\nitself a subregion of a parent GeoRegion (identified by pID, which must itself be a valid ID)","category":"page"},{"location":"georegions/intro.html","page":"What is a GeoRegion?","title":"What is a GeoRegion?","text":"tip: Default GeoRegions\nWhen using GeoRegions.jl, the default GeoRegion should generally be the global domain, specified by GLB and given by the [N,S,E,W] coordinates [90,-90,360,0].  The Global GeoRegion GLB is considered to be a subset of itself.","category":"page"},{"location":"georegions/read.html#Reading-in-Defined-GeoRegion-Information","page":"Retrieving GeoRegions","title":"Reading in Defined GeoRegion Information","text":"","category":"section"},{"location":"georegions/read.html","page":"Retrieving GeoRegions","title":"Retrieving GeoRegions","text":"In this section, we go through process of extracting information regarding a GeoRegion.","category":"page"},{"location":"georegions/read.html#Setup","page":"Retrieving GeoRegions","title":"Setup","text":"","category":"section"},{"location":"georegions/read.html","page":"Retrieving GeoRegions","title":"Retrieving GeoRegions","text":"using GeoRegions\nusing DelimitedFiles\nusing CairoMakie\n\ndownload(\"https://raw.githubusercontent.com/natgeo-wong/GeoPlottingData/main/coastline_resl.txt\",\"coast.cst\")\ncoast = readdlm(\"coast.cst\",comments=true)\nclon  = coast[:,1]\nclat  = coast[:,2]\nnothing","category":"page"},{"location":"georegions/read.html#Retrieving-Information-about-a-Previously-Defined-GeoRegion","page":"Retrieving GeoRegions","title":"Retrieving Information about a Previously Defined GeoRegion","text":"","category":"section"},{"location":"georegions/read.html","page":"Retrieving GeoRegions","title":"Retrieving GeoRegions","text":"We use the function GeoRegion(ID), where ID is the ID of the GeoRegion, in order to extract the information for the GeoRegion.","category":"page"},{"location":"georegions/read.html","page":"Retrieving GeoRegions","title":"Retrieving GeoRegions","text":"GeoRegion(\"AR6_NWN\")","category":"page"},{"location":"georegions/read.html","page":"Retrieving GeoRegions","title":"Retrieving GeoRegions","text":"GeoRegion(::AbstractString)","category":"page"},{"location":"georegions/read.html#GeoRegions.GeoRegion-Tuple{AbstractString}","page":"Retrieving GeoRegions","title":"GeoRegions.GeoRegion","text":"GeoRegion(RegID::AbstractString) -> geo::GeoRegion\n\nExtracts information of the GeoRegion with the ID RegID.  If no GeoRegion with this ID exists, an error is thrown.\n\nArguments\n\nRegID : The keyword ID that will be used to identify the GeoRegion.           If the ID is not valid (i.e. not being used), then an error will be thrown.\n\nReturns\n\ngeo : A GeoRegion\n\n\n\n\n\n","category":"method"},{"location":"georegions/read.html#The-Difference-between-Bounds-and-Shape-in-a-PolyRegion","page":"Retrieving GeoRegions","title":"The Difference between Bounds and Shape in a PolyRegion","text":"","category":"section"},{"location":"georegions/read.html","page":"Retrieving GeoRegions","title":"Retrieving GeoRegions","text":"What is the difference between the fields bound and shape in a PolyRegion?  The answer is simple: a bound is a rectilinear-region in the lon-lat coordinate system, while the shape denotes the actual PolyRegion.  We retrieve the longitude and latitude coordinates for the bound and shape fields using the function coordGeoRegion().","category":"page"},{"location":"georegions/read.html","page":"Retrieving GeoRegions","title":"Retrieving GeoRegions","text":"note: Bound and Shape in `RectRegion`\nThere is no field shape in a RectRegion because the shape of a RectRegion is defined by its rectilinear bound.","category":"page"},{"location":"georegions/read.html","page":"Retrieving GeoRegions","title":"Retrieving GeoRegions","text":"blon,blat,slon,slat = coordGeoRegion(GeoRegion(\"AR6_NWN\"))","category":"page"},{"location":"georegions/read.html","page":"Retrieving GeoRegions","title":"Retrieving GeoRegions","text":"From plotting the bounds (blon,blat) and the shape(slon,slat), we see that the bound is the region defined by the westernmost, easternmost, northernmost and southernmost coordinates of the shape.","category":"page"},{"location":"georegions/read.html","page":"Retrieving GeoRegions","title":"Retrieving GeoRegions","text":"aspect = (maximum(slon)-minimum(slon))/(maximum(slat)-minimum(slat))\nfig = Figure()\nax = Axis(\n    fig[1,1],width=750,height=750/aspect,\n    limits=(minimum(slon)-2,maximum(slon)+2,minimum(slat)-2,maximum(slat)+2)\n)\nlines!(ax,clon,clat,color=:black,linewidth=3)\nlines!(ax,slon,slat,linewidth=5)\nlines!(ax,blon,blat,linewidth=5)\nresize_to_layout!(fig)\nfig","category":"page"},{"location":"georegions/read.html","page":"Retrieving GeoRegions","title":"Retrieving GeoRegions","text":"coordGeoRegion(::RectRegion)\ncoordGeoRegion(::PolyRegion)","category":"page"},{"location":"georegions/read.html#GeoRegions.coordGeoRegion-Tuple{RectRegion}","page":"Retrieving GeoRegions","title":"GeoRegions.coordGeoRegion","text":"coordGeoRegion(geo::RectRegion) -> blon::Vector{<:Real}, blat::Vector{<:Real}\n\nFor a given RectRegion, extract the [N,S,E,W] bounds and create a longitude and latitude vector.\n\nArguments\n\ngeo : A RectRegion (i.e. a rectilinear GeoRegion)\n\nReturns\n\nblon : A vector of longitude points for the bound of the GeoRegion\nblat : A vector of latitude points for the bound of the GeoRegion\n\n\n\n\n\n","category":"method"},{"location":"georegions/read.html#GeoRegions.coordGeoRegion-Tuple{PolyRegion}","page":"Retrieving GeoRegions","title":"GeoRegions.coordGeoRegion","text":"coordGeoRegion(geo::PolyRegion) ->\n    blon::Vector{<:Real}, blat::Vector{<:Real},\n    slon::Vector{<:Real}, slat::Vector{<:Real},\n\nFor a given RectRegion, extract the [N,S,E,W] bounds and create a longitude and latitude vectors for the bound and the shape of the GeoRegion\n\nArguments\n\ngeo : A PolyRegion (i.e. a polygonal GeoRegion)\n\nReturns\n\nblon : A vector of longitude points for the bound of the GeoRegion\nblat : A vector of latitude points for the bound of the GeoRegion\nslon : A vector of longitude points for the shape of the GeoRegion\nslat : A vector of latitude points for the shape of the GeoRegion\n\n\n\n\n\n","category":"method"},{"location":"regiongrids/intro.html#What-is-a-RegionGrid?","page":"What is a RegionGrid?","title":"What is a RegionGrid?","text":"","category":"section"},{"location":"regiongrids/intro.html","page":"What is a RegionGrid?","title":"What is a RegionGrid?","text":"But how do we go from defining a GeoRegion, to extracting data for that GeoRegion?  The answer is with the information in the RegionGrid types, which maps gridded lon-lat data to a given GeoRegion as follows:","category":"page"},{"location":"regiongrids/intro.html","page":"What is a RegionGrid?","title":"What is a RegionGrid?","text":"Mapping gridded lon-lat data to a RectRegion gives a RectGrid structure\nMapping gridded lon-lat data to a PolyRegion gives a PolyGrid structure\nMapping non-rectilinear gridded lon-lat data to a RegionMask gives a RegionMask structure","category":"page"},{"location":"regiongrids/intro.html","page":"What is a RegionGrid?","title":"What is a RegionGrid?","text":"However, the basic uses of RectGrid and PolyGrid are the same, and as such their differences are largely transparent to the user, except for one field found in PolyGrid, the mask, which will be elaborated upon later.","category":"page"},{"location":"regiongrids/intro.html","page":"What is a RegionGrid?","title":"What is a RegionGrid?","text":"RegionGrid","category":"page"},{"location":"regiongrids/intro.html#GeoRegions.RegionGrid","page":"What is a RegionGrid?","title":"GeoRegions.RegionGrid","text":"RegionGrid\n\nAbstract supertype for geographical regions, with the following subtypes:\n\nRectGrid{FT<:Real} <: RegionGrid\nPolyGrid{FT<:Real} <: RegionGrid\nRegionMask{FT<:Real} <: RegionGrid\n\nBoth RectGrid and PolyGrid types contain the following fields:\n\ngrid - A vector of Ints defining the gridpoint indices of the [N,S,E,W] points respectively\nlon - A vector of Floats defining the latitude vector describing the region\nlat - A vector of Floats defining the latitude vector describing the region\nilon - A vector of Ints defining indices of the parent longitude vector describing the region\nilat - A vector of Ints defining indices of the parent latitude vector describing the region\n\nA PolyGrid type will also contain the following field:\n\nmask - An array of 0s and 1s defining a non-rectlinear shape within a rectilinear grid where data is valid (only available in PolyGrid types)\n\nA RegionMask type will contain the following fields:\n\nlon - An array of longitude points\nlat - An array of latitude points\nmask - An array of NaNs and 1s defining the region within the original field in which data points are valid\n\n\n\n\n\n","category":"type"},{"location":"regiongrids/intro.html","page":"What is a RegionGrid?","title":"What is a RegionGrid?","text":"So basically a RegionGrid contains information on the indices of the gridded data that are part of the GeoRegion, thus helping us extract the relevant data for a given GeoRegion.","category":"page"},{"location":"georegions/create.html#Creating-GeoRegions","page":"Creating GeoRegions","title":"Creating GeoRegions","text":"","category":"section"},{"location":"georegions/create.html","page":"Creating GeoRegions","title":"Creating GeoRegions","text":"In this section, we go through the basic steps of creating a GeoRegion, and removing it once defined so it can be redefined.","category":"page"},{"location":"georegions/create.html#Defining-a-new-GeoRegion","page":"Creating GeoRegions","title":"Defining a new GeoRegion","text":"","category":"section"},{"location":"georegions/create.html","page":"Creating GeoRegions","title":"Creating GeoRegions","text":"We use the functions RectRegion and PolyRegion to define rectilinear and polygonal regions respectively. For example, we construct the sample RectRegion TRC","category":"page"},{"location":"georegions/create.html","page":"Creating GeoRegions","title":"Creating GeoRegions","text":"using GeoRegions\nRectRegion(\"TRC\",\"GLB\",\"Test Rectangle Region\",[30,20,50,10])\nPolyRegion(\"TPL\",\"GLB\",\"Test Polygonal Region\",[30,40,50,40,30],[20,30,20,10,20])","category":"page"},{"location":"georegions/create.html","page":"Creating GeoRegions","title":"Creating GeoRegions","text":"note: Defining PolyRegions\nWhen defining PolyRegions, the first and last set of (lon,lat) coordinates must be the same (i.e. a closed polygon must be defined)","category":"page"},{"location":"georegions/create.html","page":"Creating GeoRegions","title":"Creating GeoRegions","text":"The GeoRegions will be automatically added to the following files in joinpath(DEPOT_PATH[1],\"files\",\"GeoRegions\"):","category":"page"},{"location":"georegions/create.html","page":"Creating GeoRegions","title":"Creating GeoRegions","text":"RectRegions will be added to rectlist.txt\nPolyRegions will be added to polylist.txt","category":"page"},{"location":"georegions/create.html","page":"Creating GeoRegions","title":"Creating GeoRegions","text":"If the GeoRegion ID TRC already exists, however, this will throw an error","category":"page"},{"location":"georegions/create.html","page":"Creating GeoRegions","title":"Creating GeoRegions","text":"using GeoRegions\nRectRegion(\"TRC\",\"GLB\",\"Test Rectangle Region2\",[40,20,52,10])","category":"page"},{"location":"georegions/create.html","page":"Creating GeoRegions","title":"Creating GeoRegions","text":"RectRegion(\n    ::AbstractString,::AbstractString,::AbstractString,\n    ::Vector{<:Real}\n)\nPolyRegion(\n    ::AbstractString,::AbstractString,::AbstractString,\n    ::Vector{<:Real},::Vector{<:Real}\n)","category":"page"},{"location":"georegions/create.html#GeoRegions.RectRegion-Tuple{AbstractString, AbstractString, AbstractString, Vector{<:Real}}","page":"Creating GeoRegions","title":"GeoRegions.RectRegion","text":"RectRegion(\n    RegID :: AbstractString,\n    ParID :: AbstractString,\n    name  :: AbstractString,\n    bound :: Vector{<:Real};\n    savegeo :: Bool = true,\n    verbose :: Bool = true,\n    ST = String,\n    FT = Float64\n) -> RectRegion{ST,FT}\n\nCreates a rectilinear GeoRegion RegID.\n\nArguments\n\nRegID : The keyword ID that will be used to identify the GeoRegion.           If the ID is already in use, then an error will be thrown.\nParID : The ID of the parent GeoRegion where information can be extracted from\nname  : A name for the GeoRegion (meta information, can be used in Logging)\nbound : The [N,S,E,W] coordinates defining the region\n\nKeyword Arguments\n\nsavegeo : Save the GeoRegion into the master list? Default is true\nverbose : Verbose logging for ease of monitoring? Default is true\n\n\n\n\n\n","category":"method"},{"location":"georegions/create.html#GeoRegions.PolyRegion-Tuple{AbstractString, AbstractString, AbstractString, Vector{<:Real}, Vector{<:Real}}","page":"Creating GeoRegions","title":"GeoRegions.PolyRegion","text":"PolyRegion(\n    RegID :: AbstractString,\n    ParID :: AbstractString,\n    name  :: AbstractString,\n    lonpt :: Vector{<:Real},\n    latpt :: Vector{<:Real};\n    savegeo :: Bool = true,\n    verbose :: Bool = true,\n    ST = String,\n    FT = Float64\n) -> PolyRegion{ST,FT}\n\nCreates a rectilinear GeoRegion RegID.\n\nArguments\n\nRegID : The keyword ID that will be used to identify the GeoRegion.           If the ID is already in use, then an error will be thrown.\nParID : The ID of the parent GeoRegion where information can be extracted from\nname  : A name for the GeoRegion (meta information, can be used in Logging)\nlonpt : A vector containing the longitude points\nlatpt : A vector containing the latitude points\n\nKeyword Arguments\n\nsavegeo : Save the GeoRegion into the master list? Default is true\nverbose : Verbose logging for ease of monitoring? Default is true\n\ninfo: Start and End Points\nThe 1st and last elements of lonpt and latpt must be equal.\n\n\n\n\n\n","category":"method"},{"location":"georegions/create.html#Is-it-already-a-GeoRegion?","page":"Creating GeoRegions","title":"Is it already a GeoRegion?","text":"","category":"section"},{"location":"georegions/create.html","page":"Creating GeoRegions","title":"Creating GeoRegions","text":"Sometimes we would like to independently check if an ID has already been used.  We can use the function isGeoRegion() to perform this checkIf the GeoRegion IDTRC` already exists, however, this will throw an error","category":"page"},{"location":"georegions/create.html","page":"Creating GeoRegions","title":"Creating GeoRegions","text":"isGeoRegion","category":"page"},{"location":"georegions/create.html#GeoRegions.isGeoRegion","page":"Creating GeoRegions","title":"GeoRegions.isGeoRegion","text":"isGeoRegion(\n    RegID :: AbstractString;\n    throw :: Bool = true\n) -> tf :: Bool\n\nExtracts information of the GeoRegion with the ID RegID.  If no GeoRegion with this ID exists, an error is thrown.\n\nArguments\n\nRegID : The keyword ID that will be used to identify the GeoRegion.       If the ID is not valid (i.e. not being used), then an error will be thrown.\nthrow : If true, then throws an error if RegID is not a valid GeoRegion identifier instead of returning the Boolean tf\n\nReturns\n\ntf : True / False\n\n\n\n\n\n","category":"function"},{"location":"georegions/create.html","page":"Creating GeoRegions","title":"Creating GeoRegions","text":"using GeoRegions\nisGeoRegion(\"AR6_SEA\")\nisGeoRegion(\"RND\",throw=false)\nisGeoRegion(\"RND\")","category":"page"},{"location":"georegions/create.html#Removing-an-existing-GeoRegion","page":"Creating GeoRegions","title":"Removing an existing GeoRegion","text":"","category":"section"},{"location":"georegions/create.html","page":"Creating GeoRegions","title":"Creating GeoRegions","text":"To remove an existing GeoRegion, we can use the function removeGeoRegion","category":"page"},{"location":"georegions/create.html","page":"Creating GeoRegions","title":"Creating GeoRegions","text":"using GeoRegions\nremoveGeoRegion(\"TRC\")","category":"page"},{"location":"georegions/create.html","page":"Creating GeoRegions","title":"Creating GeoRegions","text":"tip: Global GeoRegion\nThe Global GeoRegion GLB is considered to be an integral part of the GeoRegions.jl package and therefore it cannot be removed.","category":"page"},{"location":"georegions/create.html","page":"Creating GeoRegions","title":"Creating GeoRegions","text":"using GeoRegions\nremoveGeoRegion(\"GLB\")","category":"page"},{"location":"georegions/create.html","page":"Creating GeoRegions","title":"Creating GeoRegions","text":"removeGeoRegion(::AbstractString)","category":"page"},{"location":"georegions/create.html#GeoRegions.removeGeoRegion-Tuple{AbstractString}","page":"Creating GeoRegions","title":"GeoRegions.removeGeoRegion","text":"removeGeoRegion(RegID::AbstractString)\n\nCreates the GeoRegion associated with the ID RegID.\n\nArguments\n\nRegID : The keyword ID that will be used to identify the GeoRegion.           If the ID is not valid (i.e. not being used), then an error will be thrown.\n\n\n\n\n\n","category":"method"},{"location":"georegions/create.html#Reset-the-list-of-GeoRegions","page":"Creating GeoRegions","title":"Reset the list of GeoRegions","text":"","category":"section"},{"location":"georegions/create.html","page":"Creating GeoRegions","title":"Creating GeoRegions","text":"Should one wish to entirely reset the list of GeoRegions, one can call resetGeoRegions().  See Custom GeoRegions for more details.","category":"page"},{"location":"index.html#[GeoRegions.jl](https://github.com/JuliaClimate/GeoRegions.jl)","page":"Home","title":"GeoRegions.jl","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"Extract Regional Data from a Gridded Dataset","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"GeoRegions.jl is a Julia package that aims to streamline the following processes:","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"query if a point / grid is within a specified boundary\nextract point data (given coordinates) from a given region\nextract regional data from a gridded dataset, or from a parent region dataset","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"The new core functionality of GeoRegions.jl (newly developed in v2), are the GeoRegion and RegionInfo supertypes, which contains information","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"GeoRegion: regarding the shape and bounds of a given GeoRegion\nRegionGrid: needed to extract information from a lon-lat grid typical of climate datasets, such as Reanalysis data, GCM model output, satellite observations, etc.","category":"page"},{"location":"index.html#Installation-Instructions","page":"Home","title":"Installation Instructions","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"The latest version of GeoRegions can be installed using the Julia package manager (accessed by pressing ] in the Julia command prompt)","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"julia> ]\n(@v1.6) pkg> add GeoRegions","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"You can update GeoRegions.jl to the latest version using","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"(@v1.6) pkg> update GeoRegions","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"And if you want to get the latest release without waiting for me to update the Julia Registry (although this generally isn't necessary since I make a point to release patch versions as soon as I find bugs or add new working features), you may fix the version to the main branch of the GitHub repository:","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"(@v1.6) pkg> add GeoRegions#main","category":"page"},{"location":"index.html#Documentation-Overview","page":"Home","title":"Documentation Overview","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"The documentation for GeoRegions.jl is divided into three components:","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Introduction - meant as an introduction to the package, the concept of GeoRegion, and how to create/manipulate them\nTutorials - meant to show how GeoRegions work, and how they can be used to extract data \nHow-to Examples - geared towards those looking for specific examples of what can be done\nAPI Reference - comprehensive summary of all exported functionalities","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"tip: Obtaining Example Datasets\nAll the output for the coding examples were produced using my computer with key security information (such as login info) omitted.  The examples cannot be run online because the file size requirements are too big.  Copying and pasting the code examples (with relevant directory and login information changes) should produce the same results.","category":"page"},{"location":"index.html#Getting-help","page":"Home","title":"Getting help","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"If you are interested in using GeoRegions.jl or are trying to figure out how to use it, please feel free to ask me questions and get in touch!  Please feel free to open an issue if you have any questions, comments, suggestions, etc!","category":"page"}]
}
