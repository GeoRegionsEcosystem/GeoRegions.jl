import{_ as o,c as l,j as e,a as i,G as a,a4 as n,B as p,o as r}from"./chunks/framework.CEeYBNx8.js";const j=JSON.parse('{"title":"API for Project-Handling in GeoRegions.jl","description":"","frontmatter":{},"headers":[],"relativePath":"api/project.md","filePath":"api/project.md","lastUpdated":null}'),h={name:"api/project.md"},d={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""};function c(u,s,f,b,y,E){const t=p("Badge");return r(),l("div",null,[s[9]||(s[9]=e("h1",{id:"API-for-Project-Handling-in-GeoRegions.jl",tabindex:"-1"},[i("API for Project-Handling in GeoRegions.jl "),e("a",{class:"header-anchor",href:"#API-for-Project-Handling-in-GeoRegions.jl","aria-label":'Permalink to "API for Project-Handling in GeoRegions.jl {#API-for-Project-Handling-in-GeoRegions.jl}"'},"â€‹")],-1)),e("details",d,[e("summary",null,[s[0]||(s[0]=e("a",{id:"GeoRegions.setupGeoRegions",href:"#GeoRegions.setupGeoRegions"},[e("span",{class:"jlbinding"},"GeoRegions.setupGeoRegions")],-1)),s[1]||(s[1]=i()),a(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[2]||(s[2]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">setupGeoRegions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractString</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> pwd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    overwrite </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span></code></pre></div><p>Setup the directory specified by <code>path</code> with files for custom <code>GeoRegion</code>s. If <code>overwrite = true</code>, then any preexisting files are overwritten.</p><p><strong>Keyword Arguments</strong></p><ul><li><p><code>path</code> : The path where the template list of custom GeoRegions will be copied to. Defaults to the current working directory <code>pwd()</code>.</p></li><li><p><code>overwrite</code> : If template files exist in this folder, overwrite?</p></li></ul><p><a href="https://github.com/GeoRegionsEcosystem/GeoRegions.jl/blob/9bad2bf9aeb53213a7a8c283f3f101eeee95c2fd/src/georegions/project.jl#L1-L14" target="_blank" rel="noreferrer">source</a></p>`,5))]),e("details",g,[e("summary",null,[s[3]||(s[3]=e("a",{id:"GeoRegions.deleteGeoRegions",href:"#GeoRegions.deleteGeoRegions"},[e("span",{class:"jlbinding"},"GeoRegions.deleteGeoRegions")],-1)),s[4]||(s[4]=i()),a(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[5]||(s[5]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">deleteGeoRegions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractString</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> pwd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span></code></pre></div><p>Reset all the files containing GeoRegion information back to the default.</p><p><strong>Keyword Arguments</strong></p><ul><li><code>path</code> : The path where the list of custom GeoRegions will be retrieved from. Defaults to the current working directory <code>pwd()</code>.</li></ul><p><a href="https://github.com/GeoRegionsEcosystem/GeoRegions.jl/blob/9bad2bf9aeb53213a7a8c283f3f101eeee95c2fd/src/georegions/project.jl#L144-L155" target="_blank" rel="noreferrer">source</a></p>`,5))]),e("details",k,[e("summary",null,[s[6]||(s[6]=e("a",{id:"GeoRegions.tableGeoRegions-Tuple{AbstractString}",href:"#GeoRegions.tableGeoRegions-Tuple{AbstractString}"},[e("span",{class:"jlbinding"},"GeoRegions.tableGeoRegions")],-1)),s[7]||(s[7]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[8]||(s[8]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tableGeoRegions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    fname </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractString</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span></code></pre></div><p>Display all available GeoRegions in tabular format listed in the file <code>fname</code>.</p><p><strong>Arguments</strong></p><ul><li><code>fname</code> : Specifies the name + path of the file containing GeoRegion information.</li></ul><p><a href="https://github.com/GeoRegionsEcosystem/GeoRegions.jl/blob/9bad2bf9aeb53213a7a8c283f3f101eeee95c2fd/src/georegions/tables.jl#L92-L102" target="_blank" rel="noreferrer">source</a></p>`,5))])])}const F=o(h,[["render",c]]);export{j as __pageData,F as default};
