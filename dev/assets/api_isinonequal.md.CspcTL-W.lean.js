import{_ as o,c as l,j as i,a as e,G as n,a4 as t,B as h,o as p}from"./chunks/framework.CEeYBNx8.js";const j=JSON.parse('{"title":"API for Is it in/on a GeoRegion?","description":"","frontmatter":{},"headers":[],"relativePath":"api/isinonequal.md","filePath":"api/isinonequal.md","lastUpdated":null}'),d={name:"api/isinonequal.md"},k={class:"jldocstring custom-block",open:""},r={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""};function C(m,s,R,A,B,D){const a=h("Badge");return p(),l("div",null,[s[30]||(s[30]=i("h1",{id:"API-for-Is-it-in/on-a-GeoRegion?",tabindex:"-1"},[e("API for Is it in/on a GeoRegion? "),i("a",{class:"header-anchor",href:"#API-for-Is-it-in/on-a-GeoRegion?","aria-label":'Permalink to "API for Is it in/on a GeoRegion? {#API-for-Is-it-in/on-a-GeoRegion?}"'},"â€‹")],-1)),i("details",k,[i("summary",null,[s[0]||(s[0]=i("a",{id:"Base.in-Tuple{Point2{<:Real}, GeoRegion}",href:"#Base.in-Tuple{Point2{<:Real}, GeoRegion}"},[i("span",{class:"jlbinding"},"Base.in")],-1)),s[1]||(s[1]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[2]||(s[2]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    point </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Point2{&lt;:Real}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    geo   </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GeoRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    throw </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tf </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span></span></code></pre></div><p>Check if a geographical point <code>point</code> is within a GeoRegion defined by <code>geo</code>.</p><p><strong>Arguments</strong></p><ul><li><p><code>point</code> : A geographical point of Type <code>Point</code>. Pass <code>Point(plon,plat)</code>, where <code>plon</code> and <code>plat</code> are the longitude and latitudes of the point.</p></li><li><p><code>geo</code> : The GeoRegion struct container.</p></li></ul><p><strong>Keyword Arguments</strong></p><ul><li><code>throw</code> : If <code>true</code>, then if <code>point</code> is not within <code>geo</code>, an error is thrown and the program stops running.</li></ul><p><strong>Returns</strong></p><ul><li><code>tf</code> : A <code>true</code>/<code>false</code> boolean.</li></ul><p><a href="https://github.com/GeoRegionsEcosystem/GeoRegions.jl/blob/7eda153f59dbe29557c9c50e8136251156168476/src/isin/isin.jl#L1-L22" target="_blank" rel="noreferrer">source</a></p>`,9))]),i("details",r,[i("summary",null,[s[3]||(s[3]=i("a",{id:"Base.in-Tuple{GeoRegion, GeoRegion}",href:"#Base.in-Tuple{GeoRegion, GeoRegion}"},[i("span",{class:"jlbinding"},"Base.in")],-1)),s[4]||(s[4]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[5]||(s[5]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    cgeo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GeoRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    geo  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GeoRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    n    </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    throw   </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    verbose </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tf </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span></span></code></pre></div><p>Check if a child GeoRegion defined by <code>cgeo</code> is within another GeoRegion <code>geo</code>.</p><p><strong>Arguments</strong></p><ul><li><p><code>cgeo</code> : A GeoRegion that we postulate to be a &quot;child&quot;, or a subset of the GeoRegion defined by <code>geo</code>.</p></li><li><p><code>geo</code> : A GeoRegion that we postulate to be a &quot;parent&quot;, or containing the GeoRegion defined by <code>cgeo</code>.</p></li></ul><p><strong>Keyword Arguments</strong></p><ul><li><p><code>n</code> : The number of segments to split each of the <code>GeoRegion</code>s into. Default is 100.</p></li><li><p><code>throw</code> : If <code>true</code>, then if <code>cgeo</code> is not within <code>geo</code>, an error is thrown and the program stops running.</p></li><li><p><code>verbose</code> : If <code>true</code>, print logs to screen.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>tf</code> : A <code>true</code>/<code>false</code> boolean.</li></ul><p><a href="https://github.com/GeoRegionsEcosystem/GeoRegions.jl/blob/7eda153f59dbe29557c9c50e8136251156168476/src/isin/isin.jl#L61-L86" target="_blank" rel="noreferrer">source</a></p>`,9))]),i("details",g,[i("summary",null,[s[6]||(s[6]=i("a",{id:"GeoRegions.on-Tuple{Point2{<:Real}, GeoRegion}",href:"#GeoRegions.on-Tuple{Point2{<:Real}, GeoRegion}"},[i("span",{class:"jlbinding"},"GeoRegions.on")],-1)),s[7]||(s[7]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[8]||(s[8]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    point </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Point2{&lt;:Real}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    geo   </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GeoRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    throw </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tf </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span></span></code></pre></div><p>Check if a geographical point <code>point</code> is on the boundary of a shape of a GeoRegion defined by <code>geo</code>.</p><p><strong>Arguments</strong></p><ul><li><p><code>point</code> : A geographical point of Type <code>Point</code>. Pass <code>Point(plon,plat)</code>, where <code>plon</code> and <code>plat</code> are the longitude and latitudes of the point.</p></li><li><p><code>geo</code> : The GeoRegion struct container.</p></li></ul><p><strong>Keyword Arguments</strong></p><ul><li><code>throw</code> : If <code>true</code>, then if <code>point</code> is not within <code>geo</code>, an error is thrown and the program stops running.</li></ul><p><strong>Returns</strong></p><ul><li><code>tf</code> : A <code>true</code>/<code>false</code> boolean.</li></ul><p><a href="https://github.com/GeoRegionsEcosystem/GeoRegions.jl/blob/7eda153f59dbe29557c9c50e8136251156168476/src/isin/ison.jl#L1-L22" target="_blank" rel="noreferrer">source</a></p>`,9))]),i("details",c,[i("summary",null,[s[9]||(s[9]=i("a",{id:"GeoRegions.on-Tuple{GeoRegion, GeoRegion}",href:"#GeoRegions.on-Tuple{GeoRegion, GeoRegion}"},[i("span",{class:"jlbinding"},"GeoRegions.on")],-1)),s[10]||(s[10]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[11]||(s[11]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    geo1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GeoRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    geo2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GeoRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    n    </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    throw   </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    verbose </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tf </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span></span></code></pre></div><p>Check if the GeoRegions <code>geo1</code> and <code>geo2</code> have the same shape. The order of <code>geo1</code> and <code>geo2</code> does not matter.</p><p><strong>Arguments</strong></p><ul><li><p><code>geo1</code> : The first GeoRegion</p></li><li><p><code>geo2</code> : The second GeoRegion</p></li></ul><p><strong>Keyword Arguments</strong></p><ul><li><p><code>n</code> : The number of segments to split each of the <code>GeoRegion</code>s into. Default is 2.</p></li><li><p><code>throw</code> : If <code>true</code>, then if <code>geo1</code> does not have the same shape as <code>geo2</code>, an error is thrown and the program stops running.</p></li><li><p><code>verbose</code> : If <code>true</code>, print logs to screen.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>tf</code> : A <code>true</code>/<code>false</code> boolean.</li></ul><p><a href="https://github.com/GeoRegionsEcosystem/GeoRegions.jl/blob/7eda153f59dbe29557c9c50e8136251156168476/src/isin/ison.jl#L61-L86" target="_blank" rel="noreferrer">source</a></p>`,9))]),i("details",E,[i("summary",null,[s[12]||(s[12]=i("a",{id:"Base.:==-Tuple{GeoRegion, GeoRegion}",href:"#Base.:==-Tuple{GeoRegion, GeoRegion}"},[i("span",{class:"jlbinding"},"Base.:==")],-1)),s[13]||(s[13]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[14]||(s[14]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    geo1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GeoRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    geo2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GeoRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tf </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span></span></code></pre></div><p>Checks all the fields (except names and paths) of two different GeoRegions in order to determine if they are exactly the same. The GeoRegions must be of the same GeoRegion <code>type</code>.</p><p>The <code>geo1.shape</code> and <code>geo2.shape</code> need not be exactly the same as long as they define the same area (i.e., the points in <code>geo2</code> can be a circshift version of <code>geo1</code>).</p><p><strong>Arguments</strong></p><ul><li><p><code>geo1</code> : The first GeoRegion.</p></li><li><p><code>geo2</code> : The second GeoRegion.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>tf</code> : A <code>true</code>/<code>false</code> boolean.</li></ul><p><a href="https://github.com/GeoRegionsEcosystem/GeoRegions.jl/blob/7eda153f59dbe29557c9c50e8136251156168476/src/georegions/is.jl#L1-L19" target="_blank" rel="noreferrer">source</a></p>`,8))]),i("details",y,[i("summary",null,[s[15]||(s[15]=i("a",{id:"Base.isequal-Tuple{RectRegion, RectRegion}",href:"#Base.isequal-Tuple{RectRegion, RectRegion}"},[i("span",{class:"jlbinding"},"Base.isequal")],-1)),s[16]||(s[16]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[17]||(s[17]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isequal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    geo1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GeoRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    geo2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GeoRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    strict  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    verbose </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tf </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span></span></code></pre></div><p>Checks all the fields (except names) of two different GeoRegions in order to determine if they are exactly the same. The GeoRegions need not be of the same GeoRegion <code>type</code> as long as they have the same <code>ID</code>, <code>pID</code> and area defined by <code>shape</code>.</p><p>The <code>geo1.shape</code> and <code>geo2.shape</code> need not be exactly the same as long as they define exactly the same area (i.e., the points in <code>geo2</code> can be a <code>circshift()</code> version of <code>geo1</code>).</p><p><strong>Arguments</strong></p><ul><li><p><code>geo1</code> : The first GeoRegion.</p></li><li><p><code>geo2</code> : The second GeoRegion.</p></li></ul><p><strong>Keyword Arguments</strong></p><ul><li><p><code>strict</code> : If <code>true</code> (which is default), <code>geo1</code> and <code>geo2</code> must be of the same GeoRegion <code>type</code> (e.g., a <code>RectRegion â‰  PolyRegion</code>).</p></li><li><p><code>verbose</code> : Verbose logging for ease of monitoring? Default is <code>false</code>.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>tf</code> : A <code>true</code>/<code>false</code> boolean.</li></ul><p><a href="https://github.com/GeoRegionsEcosystem/GeoRegions.jl/blob/7eda153f59dbe29557c9c50e8136251156168476/src/georegions/is.jl#L23-L48" target="_blank" rel="noreferrer">source</a></p>`,10))]),i("details",u,[i("summary",null,[s[18]||(s[18]=i("a",{id:"GeoRegions.isgeo-Tuple{GeoRegion}",href:"#GeoRegions.isgeo-Tuple{GeoRegion}"},[i("span",{class:"jlbinding"},"GeoRegions.isgeo")],-1)),s[19]||(s[19]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[20]||(s[20]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isgeo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    geo  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GeoRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractString</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dirname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(geo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">path),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    strict  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    shape   </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    throw   </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    verbose </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tf </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span></span></code></pre></div><p>Checks all the GeoRegions defined in the project determined by <code>path</code>. If there exists a <code>GeoRegion</code> with the same <code>ID</code> <strong>and</strong> the same field values (except <code>name</code> and <code>path</code>) as the GeoRegion <code>geo</code>, returns <code>true</code>. Otherwise, returns <code>false</code> or throws an error.</p><p><strong>Arguments</strong></p><ul><li><code>geo</code> : The GeoRegion in question.</li></ul><p><strong>Keyword Arguments</strong></p><ul><li><p><code>path</code> : The path where the list of custom GeoRegions will be retrieved from. Defaults to the directory <code>geo.path</code>.</p></li><li><p><code>strict</code> : If <code>true</code> (which is default), check to see if all fields are equivalent except for <code>name</code> and <code>path</code>.</p></li><li><p><code>shape</code> : If <code>true</code> (which is default), check to see if any existing GeoRegion in <code>path</code> has the same shape</p></li><li><p><code>throw</code> : If <code>true</code>, then throws an error if there is no <code>GeoRegion</code> defined in <code>path</code> with the same characteristics or field values as <code>geo</code>.</p></li><li><p><code>verbose</code> : Verbose logging for ease of monitoring? Default is <code>false</code>.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>tf</code> : A <code>true</code>/<code>false</code> boolean.</li></ul><p><a href="https://github.com/GeoRegionsEcosystem/GeoRegions.jl/blob/7eda153f59dbe29557c9c50e8136251156168476/src/georegions/is.jl#L139-L167" target="_blank" rel="noreferrer">source</a></p>`,9))]),i("details",F,[i("summary",null,[s[21]||(s[21]=i("a",{id:"GeoRegions.isgeoshape-Tuple{GeoRegion}",href:"#GeoRegions.isgeoshape-Tuple{GeoRegion}"},[i("span",{class:"jlbinding"},"GeoRegions.isgeoshape")],-1)),s[22]||(s[22]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[23]||(s[23]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isgeoshape</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    geo  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GeoRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractString</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dirname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(geo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">path),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    returnID </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    verbose  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tf </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span></span></code></pre></div><p>Checks all the GeoRegions defined in the project determined by <code>path</code>. If there exists a <code>GeoRegion</code> with the same shape as <code>geo.shape</code>, returns <code>true</code> by default, or otherwise, if <code>returnID</code> is true, it will return the ID. If there is no <code>GeoRegion</code> with the same shape, then either returns a <code>false</code> or throws and error depending on <code>throw</code></p><p><strong>Arguments</strong></p><ul><li><code>geo</code> : The GeoRegion in question.</li></ul><p><strong>Keyword Arguments</strong></p><ul><li><p><code>path</code> : The path where GeoRegions will be retrieved from and compared against. Defaults to the directory <code>geo.path</code>.</p></li><li><p><code>returnID</code> : If <code>true</code>, then returns the <code>ID</code> of the <code>GeoRegion</code> in <code>path</code> with the same shape as <code>geo</code>.</p></li><li><p><code>verbose</code> : Verbose logging for ease of monitoring? Default is <code>false</code>.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>tf</code> : A <code>true</code>/<code>false</code> boolean.</li></ul><p><a href="https://github.com/GeoRegionsEcosystem/GeoRegions.jl/blob/7eda153f59dbe29557c9c50e8136251156168476/src/georegions/is.jl#L213-L237" target="_blank" rel="noreferrer">source</a></p>`,9))]),i("details",f,[i("summary",null,[s[24]||(s[24]=i("a",{id:"GeoRegions.isgeoshape-Tuple{Vector{<:Real}, Vector{<:Real}}",href:"#GeoRegions.isgeoshape-Tuple{Vector{<:Real}, Vector{<:Real}}"},[i("span",{class:"jlbinding"},"GeoRegions.isgeoshape")],-1)),s[25]||(s[25]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[26]||(s[26]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isgeoshape</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    lon  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Vector{&lt;:Real}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    lat  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Vector{&lt;:Real}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractString</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dirname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(geo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">path),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    returnID </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    verbose  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tf </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span></span></code></pre></div><p>Checks all the GeoRegions defined in the project determined by <code>path</code>. If there exists a <code>GeoRegion</code> with the same shape as defined by the vectors <code>lon</code> and <code>lat</code>, returns <code>true</code> by default, or otherwise, if <code>returnID</code> is true, it will return the ID. If there is no <code>GeoRegion</code> with the same shape, then either returns a <code>false</code> or throws and error depending on <code>throw</code></p><p><strong>Arguments</strong></p><ul><li><p><code>lon</code> : Vector of longitude points.</p></li><li><p><code>lat</code> : Vector of latitude points.</p></li></ul><p><strong>Keyword Arguments</strong></p><ul><li><p><code>path</code> : The path where GeoRegions will be retrieved from and compared against. Defaults to the directory <code>homedir()</code>.</p></li><li><p><code>returnID</code> : If <code>true</code>, then returns the <code>ID</code> of the <code>GeoRegion</code> in <code>path</code> with the same shape as <code>geo</code>.</p></li><li><p><code>verbose</code> : Verbose logging for ease of monitoring? Default is <code>false</code>.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>tf</code> : A <code>true</code>/<code>false</code> boolean.</li></ul><p><a href="https://github.com/GeoRegionsEcosystem/GeoRegions.jl/blob/7eda153f59dbe29557c9c50e8136251156168476/src/georegions/is.jl#L265-L291" target="_blank" rel="noreferrer">source</a></p>`,9))]),i("details",b,[i("summary",null,[s[27]||(s[27]=i("a",{id:"GeoRegions.isID-Tuple{AbstractString}",href:"#GeoRegions.isID-Tuple{AbstractString}"},[i("span",{class:"jlbinding"},"GeoRegions.isID")],-1)),s[28]||(s[28]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[29]||(s[29]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ID   </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractString</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> homedir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    throw   </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    verbose </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tf </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span></span></code></pre></div><p>Checks if there is a GeoRegion, that exists in the custom lists defined in <code>path</code>, with the ID <code>ID</code>.</p><p><strong>Arguments</strong></p><ul><li><code>ID</code> : The keyword ID that will be used to identify the GeoRegion. If the ID is not valid (i.e. not being used), then an error will be thrown.</li></ul><p><strong>Keyword Arguments</strong></p><ul><li><p><code>path</code> : The path where the list of custom GeoRegions will be retrieved from. Defaults to the current directory <code>pwd()</code>.</p></li><li><p><code>throw</code> : If <code>true</code>, then throws an error if <code>ID</code> is not a valid <code>GeoRegion</code> identifier instead of returning the Boolean <code>tf</code>.</p></li><li><p><code>verbose</code> : Verbose logging for ease of monitoring? Default is <code>false</code>.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>tf</code> : A <code>true</code>/<code>false</code> boolean.</li></ul><p><a href="https://github.com/GeoRegionsEcosystem/GeoRegions.jl/blob/7eda153f59dbe29557c9c50e8136251156168476/src/georegions/is.jl#L322-L347" target="_blank" rel="noreferrer">source</a></p>`,9))])])}const v=o(d,[["render",C]]);export{j as __pageData,v as default};
