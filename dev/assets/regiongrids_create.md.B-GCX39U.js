import{_ as s,c as a,o as i,a7 as e}from"./chunks/framework.D-rV3Mrg.js";const E=JSON.parse('{"title":"RegionGrid: Applying GeoRegions to Gridded Data","description":"","frontmatter":{},"headers":[],"relativePath":"regiongrids/create.md","filePath":"regiongrids/create.md","lastUpdated":null}'),n={name:"regiongrids/create.md"},t=e(`<h1 id="RegionGrid:-Applying-GeoRegions-to-Gridded-Data" tabindex="-1">RegionGrid: Applying GeoRegions to Gridded Data <a class="header-anchor" href="#RegionGrid:-Applying-GeoRegions-to-Gridded-Data" aria-label="Permalink to &quot;RegionGrid: Applying GeoRegions to Gridded Data {#RegionGrid:-Applying-GeoRegions-to-Gridded-Data}&quot;">​</a></h1><p>In this section, we go through the basic steps of creating a RegionGrid for <code>RectRegion</code>s and <code>PolyRegion</code>s. See if you can spot the differences between the RegionGrids generated by the two different types.</p><h3 id="setup" tabindex="-1">Setup <a class="header-anchor" href="#setup" aria-label="Permalink to &quot;Setup&quot;">​</a></h3><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GeoRegions</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DelimitedFiles</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CairoMakie</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">download</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://raw.githubusercontent.com/natgeo-wong/GeoPlottingData/main/coastline_resl.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;coast.cst&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">coast </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> readdlm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;coast.cst&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,comments</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">clon  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> coast[:,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">clat  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> coast[:,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span></span></code></pre></div><h2 id="RectGrid-Example" tabindex="-1"><code>RectGrid</code> Example <a class="header-anchor" href="#RectGrid-Example" aria-label="Permalink to &quot;\`RectGrid\` Example {#RectGrid-Example}&quot;">​</a></h2><div class="language-@example vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">@example</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>geo  = GeoRegion(&quot;GF_SSA&quot;)</span></span>
<span class="line"><span>lon  = -180:5:180</span></span>
<span class="line"><span>lat  = -90:5:90</span></span>
<span class="line"><span>ggrd = RegionGrid(geo,lon[1:(end-1)],lat)</span></span></code></pre></div><h2 id="PolyGrid-Example" tabindex="-1"><code>PolyGrid</code> Example <a class="header-anchor" href="#PolyGrid-Example" aria-label="Permalink to &quot;\`PolyGrid\` Example {#PolyGrid-Example}&quot;">​</a></h2><div class="language-@example vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">@example</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>geo  = GeoRegion(&quot;AR6_NWS&quot;)</span></span>
<span class="line"><span>lon  = -180:2:180;</span></span>
<span class="line"><span>lat  = -90:2:90;</span></span>
<span class="line"><span>ggrd = RegionGrid(geo,lon[1:(end-1)],lat)</span></span></code></pre></div><p>So here, we see that in this <code>PolyGrid</code> example, the <code>RegionGrid</code> contains an additional field <code>mask</code> that, within the rectilinear longitude-latitude shape bounding the <code>GeoRegion</code> (because gridded data here is assumed to be rectilinear), the data is within the GeoRegion. Values of <code>1</code> indicate it is within the GeoRegion, otherwise the values are \`NaN.</p><div class="language-@example vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">@example</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ggrd.mask</span></span></code></pre></div><h2 id="The-Mask-of-a-PolyGrid" tabindex="-1">The Mask of a <code>PolyGrid</code> <a class="header-anchor" href="#The-Mask-of-a-PolyGrid" aria-label="Permalink to &quot;The Mask of a \`PolyGrid\` {#The-Mask-of-a-PolyGrid}&quot;">​</a></h2><p>The <code>PolyGrid</code> type derived from a <code>PolyRegion</code> allows us to apply a mask to filter out data that is within the <code>shape</code> of a <code>PolyRegion</code> on a rectilinear lon-lat grid defined by the <code>bound</code> of a PolyRegion. We consider the following example of an AR6 region over South Asia:</p><div class="language-@example vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">@example</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>geo  = GeoRegion(&quot;AR6_SAS&quot;)</span></span>
<span class="line"><span>lon  = -180:5:180;</span></span>
<span class="line"><span>lat  = -90:2:90;</span></span>
<span class="line"><span>ggrd = RegionGrid(geo,lon[1:(end-1)],lat)</span></span></code></pre></div><p>And using the field mask, we plot the points that are in the region (blue), and out of the region (red).</p><div class="language-@example vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">@example</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>mask = ggrd.mask</span></span>
<span class="line"><span>grid = ones(size(mask))</span></span>
<span class="line"><span>inlon = grid .* ggrd.lon;  inlon = inlon[.!isnan.(mask)]</span></span>
<span class="line"><span>inlat = grid .* ggrd.lat&#39;; inlat = inlat[.!isnan.(mask)]</span></span>
<span class="line"><span>otlon = grid .* ggrd.lon;  otlon = otlon[isnan.(mask)]</span></span>
<span class="line"><span>otlat = grid .* ggrd.lat&#39;; otlat = otlat[isnan.(mask)]</span></span>
<span class="line"><span>blon,blat,slon,slat = coordGeoRegion(geo)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>fig = Figure()</span></span>
<span class="line"><span>aspect = (maximum(slon)-minimum(slon))/(maximum(slat)-minimum(slat))</span></span>
<span class="line"><span>ax = Axis(</span></span>
<span class="line"><span>    fig[1,1],width=750,height=750/aspect,</span></span>
<span class="line"><span>    limits=(minimum(slon)-2,maximum(slon)+2,minimum(slat)-2,maximum(slat)+2)</span></span>
<span class="line"><span>)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>lines!(ax,clon,clat,color=:black)</span></span>
<span class="line"><span>lines!(ax,blon,blat)</span></span>
<span class="line"><span>lines!(ax,slon,slat)</span></span>
<span class="line"><span>scatter!(ax,otlon,otlat)</span></span>
<span class="line"><span>scatter!(ax,inlon,inlat)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>resize_to_layout!(fig)</span></span>
<span class="line"><span>fig</span></span></code></pre></div><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="GeoRegions.RegionGrid-Tuple{RectRegion, Vector{&lt;:Real}, Vector{&lt;:Real}}" href="#GeoRegions.RegionGrid-Tuple{RectRegion, Vector{&lt;:Real}, Vector{&lt;:Real}}">#</a> <b><u>GeoRegions.RegionGrid</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RegionGrid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    geo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GeoRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    lon </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{Vector{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},AbstractRange{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    lat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{Vector{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},AbstractRange{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RectGrid, PolyGrid</span></span></code></pre></div><p>Creates a <code>RectGrid</code> or <code>PolyGrid</code> type based on the following arguments. This method is suitable for rectilinear grids of longitude/latitude output such as from Isca, or from satellite and reanalysis gridded datasets.</p><p><strong>Arguments</strong></p><ul><li><p><code>geo</code> : A GeoRegion of interest</p></li><li><p><code>lon</code> : A vector or <code>AbstractRange</code> containing the longitude points</p></li><li><p><code>lat</code> : A vector or <code>AbstractRange</code> containing the latitude points</p></li></ul><p><a href="https://github.com/JuliaClimate/GeoRegions.jl/blob/24a46ad8102d568cb66731f155b35e09802834bc/src/extract/extract.jl#L1-L16" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="GeoRegions.RegionGrid-Tuple{GeoRegion, Matrix{&lt;:Real}, Matrix{&lt;:Real}}" href="#GeoRegions.RegionGrid-Tuple{GeoRegion, Matrix{&lt;:Real}, Matrix{&lt;:Real}}">#</a> <b><u>GeoRegions.RegionGrid</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RegionGrid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    geo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GeoRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    lon </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Array{&lt;:Real,2}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    lat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Array{&lt;:Real,2}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RegionGrid</span></span></code></pre></div><p>Creates a <code>RegionMask</code> type based on the following arguments. This method is more suitable for non-rectilinear grids of longitude and latitude points, such as in the output of WRF or CESM.</p><p><strong>Arguments</strong></p><ul><li><p><code>geo</code> : A GeoRegion of interest</p></li><li><p><code>lon</code> : An array containing the longitude points</p></li><li><p><code>lat</code> : An array containing the latitude points</p></li></ul><p><a href="https://github.com/JuliaClimate/GeoRegions.jl/blob/24a46ad8102d568cb66731f155b35e09802834bc/src/extract/extract.jl#L31-L46" target="_blank" rel="noreferrer">source</a></p></div><br><hr><p><em>This page was generated using <a href="https://github.com/fredrikekre/Literate.jl" target="_blank" rel="noreferrer">Literate.jl</a>.</em></p>`,22),l=[t];function p(o,d,h,r,g,c){return i(),a("div",null,l)}const u=s(n,[["render",p]]);export{E as __pageData,u as default};
