import{_ as t,c as l,j as i,a as e,G as a,a4 as o,B as p,o as h}from"./chunks/framework.CEeYBNx8.js";const R=JSON.parse('{"title":"API for Is it in/on a GeoRegion?","description":"","frontmatter":{},"headers":[],"relativePath":"api/isinonequal.md","filePath":"api/isinonequal.md","lastUpdated":null}'),d={name:"api/isinonequal.md"},k={class:"jldocstring custom-block",open:""},r={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""};function E(y,s,u,F,f,b){const n=p("Badge");return h(),l("div",null,[s[12]||(s[12]=i("h1",{id:"API-for-Is-it-in/on-a-GeoRegion?",tabindex:"-1"},[e("API for Is it in/on a GeoRegion? "),i("a",{class:"header-anchor",href:"#API-for-Is-it-in/on-a-GeoRegion?","aria-label":'Permalink to "API for Is it in/on a GeoRegion? {#API-for-Is-it-in/on-a-GeoRegion?}"'},"â€‹")],-1)),i("details",k,[i("summary",null,[s[0]||(s[0]=i("a",{id:"Base.in-Tuple{Point2{<:Real}, GeoRegion}",href:"#Base.in-Tuple{Point2{<:Real}, GeoRegion}"},[i("span",{class:"jlbinding"},"Base.in")],-1)),s[1]||(s[1]=e()),a(n,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[2]||(s[2]=o(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    point </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Point2{&lt;:Real}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    geo   </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GeoRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    throw </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tf </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span></span></code></pre></div><p>Check if a geographical point <code>point</code> is within a GeoRegion defined by <code>geo</code>.</p><p><strong>Arguments</strong></p><ul><li><p><code>point</code> : A geographical point of Type <code>Point</code>. Pass <code>Point(plon,plat)</code>, where <code>plon</code> and <code>plat</code> are the longitude and latitudes of the point.</p></li><li><p><code>geo</code> : The GeoRegion struct container.</p></li></ul><p><strong>Keyword Arguments</strong></p><ul><li><code>throw</code> : If <code>true</code>, then if <code>point</code> is not within <code>geo</code>, an error is thrown and the program stops running.</li></ul><p><strong>Returns</strong></p><ul><li><code>tf</code> : A <code>true</code>/<code>false</code> boolean.</li></ul><p><a href="https://github.com/GeoRegionsEcosystem/GeoRegions.jl/blob/cb64e2e82f2769baa4a69d3653309d82a64f04bb/src/isin/isin.jl#L1-L22" target="_blank" rel="noreferrer">source</a></p>`,9))]),i("details",r,[i("summary",null,[s[3]||(s[3]=i("a",{id:"Base.in-Tuple{GeoRegion, GeoRegion}",href:"#Base.in-Tuple{GeoRegion, GeoRegion}"},[i("span",{class:"jlbinding"},"Base.in")],-1)),s[4]||(s[4]=e()),a(n,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[5]||(s[5]=o(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    cgeo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GeoRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    geo  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GeoRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    n    </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    throw   </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    verbose </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tf </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span></span></code></pre></div><p>Check if a child GeoRegion defined by <code>cgeo</code> is within another GeoRegion <code>geo</code>.</p><p><strong>Arguments</strong></p><ul><li><p><code>cgeo</code> : A GeoRegion that we postulate to be a &quot;child&quot;, or a subset of the GeoRegion defined by <code>geo</code>.</p></li><li><p><code>geo</code> : A GeoRegion that we postulate to be a &quot;parent&quot;, or containing the GeoRegion defined by <code>cgeo</code>.</p></li></ul><p><strong>Keyword Arguments</strong></p><ul><li><p><code>n</code> : The number of segments to split each of the <code>GeoRegion</code>s into. Default is 100.</p></li><li><p><code>throw</code> : If <code>true</code>, then if <code>cgeo</code> is not within <code>geo</code>, an error is thrown and the program stops running.</p></li><li><p><code>verbose</code> : If <code>true</code>, print logs to screen.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>tf</code> : A <code>true</code>/<code>false</code> boolean.</li></ul><p><a href="https://github.com/GeoRegionsEcosystem/GeoRegions.jl/blob/cb64e2e82f2769baa4a69d3653309d82a64f04bb/src/isin/isin.jl#L61-L86" target="_blank" rel="noreferrer">source</a></p>`,9))]),i("details",g,[i("summary",null,[s[6]||(s[6]=i("a",{id:"GeoRegions.on-Tuple{Point2{<:Real}, GeoRegion}",href:"#GeoRegions.on-Tuple{Point2{<:Real}, GeoRegion}"},[i("span",{class:"jlbinding"},"GeoRegions.on")],-1)),s[7]||(s[7]=e()),a(n,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[8]||(s[8]=o(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    point </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Point2{&lt;:Real}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    geo   </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GeoRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    throw </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tf </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span></span></code></pre></div><p>Check if a geographical point <code>point</code> is on the boundary of a shape of a GeoRegion defined by <code>geo</code>.</p><p><strong>Arguments</strong></p><ul><li><p><code>point</code> : A geographical point of Type <code>Point</code>. Pass <code>Point(plon,plat)</code>, where <code>plon</code> and <code>plat</code> are the longitude and latitudes of the point.</p></li><li><p><code>geo</code> : The GeoRegion struct container.</p></li></ul><p><strong>Keyword Arguments</strong></p><ul><li><code>throw</code> : If <code>true</code>, then if <code>point</code> is not within <code>geo</code>, an error is thrown and the program stops running.</li></ul><p><strong>Returns</strong></p><ul><li><code>tf</code> : A <code>true</code>/<code>false</code> boolean.</li></ul><p><a href="https://github.com/GeoRegionsEcosystem/GeoRegions.jl/blob/cb64e2e82f2769baa4a69d3653309d82a64f04bb/src/isin/ison.jl#L1-L22" target="_blank" rel="noreferrer">source</a></p>`,9))]),i("details",c,[i("summary",null,[s[9]||(s[9]=i("a",{id:"GeoRegions.on-Tuple{GeoRegion, GeoRegion}",href:"#GeoRegions.on-Tuple{GeoRegion, GeoRegion}"},[i("span",{class:"jlbinding"},"GeoRegions.on")],-1)),s[10]||(s[10]=e()),a(n,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[11]||(s[11]=o(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    geo1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GeoRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    geo2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GeoRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    n    </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    throw   </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    verbose </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tf </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span></span></code></pre></div><p>Check if the GeoRegions <code>geo1</code> and <code>geo2</code> have the same shape. The order of <code>geo1</code> and <code>geo2</code> does not matter.</p><p><strong>Arguments</strong></p><ul><li><p><code>geo1</code> : The first GeoRegion</p></li><li><p><code>geo2</code> : The second GeoRegion</p></li></ul><p><strong>Keyword Arguments</strong></p><ul><li><p><code>n</code> : The number of segments to split each of the <code>GeoRegion</code>s into. Default is 2.</p></li><li><p><code>throw</code> : If <code>true</code>, then if <code>geo1</code> does not have the same shape as <code>geo2</code>, an error is thrown and the program stops running.</p></li><li><p><code>verbose</code> : If <code>true</code>, print logs to screen.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>tf</code> : A <code>true</code>/<code>false</code> boolean.</li></ul><p><a href="https://github.com/GeoRegionsEcosystem/GeoRegions.jl/blob/cb64e2e82f2769baa4a69d3653309d82a64f04bb/src/isin/ison.jl#L61-L86" target="_blank" rel="noreferrer">source</a></p>`,9))])])}const m=t(d,[["render",E]]);export{R as __pageData,m as default};
