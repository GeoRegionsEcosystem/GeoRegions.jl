import{_ as i,c as s,a5 as a,o as n}from"./chunks/framework.D0cFjeDR.js";const g=JSON.parse('{"title":"Defining new GeoRegions","description":"","frontmatter":{},"headers":[],"relativePath":"georegions/create.md","filePath":"georegions/create.md","lastUpdated":null}'),t={name:"georegions/create.md"};function o(l,e,r,h,p,d){return n(),s("div",null,e[0]||(e[0]=[a(`<h1 id="Defining-new-GeoRegions" tabindex="-1">Defining new GeoRegions <a class="header-anchor" href="#Defining-new-GeoRegions" aria-label="Permalink to &quot;Defining new GeoRegions {#Defining-new-GeoRegions}&quot;">​</a></h1><p>Recall that there are three different types of <code>GeoRegion</code>s: (a) <code>RectRegion</code>s, (b) <code>TiltRegion</code>s and (c) <code>PolyRegion</code>s.</p><p>We use the functions <code>RectRegion()</code>, <code>TiltRegion()</code> and <code>PolyRegion</code> to create new <code>GeoRegion</code>s of their respective types.</p><div class="tip custom-block"><p class="custom-block-title">saving GeoRegions</p><p>As of GeoRegions.jl ≥v7, the abovementioned functions no longer automatically save GeoRegions.jl into the directory <code>joinpath(DEPOT_PATH[1],&quot;files&quot;,&quot;GeoRegions&quot;)</code>. If you wish to automatically save new GeoRegions <strong>as they are created</strong> by these functions, specify the keyword argument <code>save = true</code>.</p></div><p>Regardless of <code>GeoRegion</code> type, the <strong>first three inputs are always the same</strong>, in respective order:</p><ol><li><p>The ID (<code>ID</code>)</p></li><li><p>parent <code>GeoRegion</code> ID, (<code>pID</code>)</p></li><li><p>Name of the GeoRegion (<code>name</code>)</p></li></ol><div class="tip custom-block"><p class="custom-block-title"><code>ID</code> and <code>pID</code></p><p>When <code>save = true</code>, the GeoRegion <code>pID</code> must already have been previously defined, and the region defined by the GeoRegion <code>ID</code> must be entirely within the region defined by the GeoRegion <code>pID</code>.</p></div><h2 id="Defining-a-new-RectRegion" tabindex="-1">Defining a new RectRegion <a class="header-anchor" href="#Defining-a-new-RectRegion" aria-label="Permalink to &quot;Defining a new RectRegion {#Defining-a-new-RectRegion}&quot;">​</a></h2><p>Out of all three <code>GeoRegion</code> types currently available, the <code>RectRegion</code> is the easiest to define. All you need to do is specify the <code>[N, S, E, W]</code> boundaries, in that order.</p><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="GeoRegions.RectRegion-Tuple{AbstractString, AbstractString, AbstractString, Vector{&lt;:Real}}" href="#GeoRegions.RectRegion-Tuple{AbstractString, AbstractString, AbstractString, Vector{&lt;:Real}}">#</a> <b><u>GeoRegions.RectRegion</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RectRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    RegID </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ParID </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    bound </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Vector{&lt;:Real}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    save </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractString</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> geodir,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    verbose </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ST </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    FT </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Float64</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> geo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RectRegion{ST,FT}</span></span></code></pre></div><p>Creates a rectilinear GeoRegion.</p><p><strong>Arguments</strong></p><ul><li><p><code>RegID</code> : The keyword ID that will be used to identify the GeoRegion. If the ID is already in use, then an error will be thrown.</p></li><li><p><code>ParID</code> : The ID of the parent GeoRegion where information can be extracted from</p></li><li><p><code>name</code> : A name for the GeoRegion (meta information, can be used in Logging)</p></li><li><p><code>bound</code> : The [N,S,E,W] coordinates defining the region</p></li></ul><p><strong>Keyword Arguments</strong></p><ul><li><p><code>save</code> : If <code>true</code>, save the GeoRegion into the list of custom GeoRegions in the path specified by <code>path</code>.</p></li><li><p><code>path</code> : The path where the list of custom GeoRegions will be retrieved from. Defaults to the <code>local</code> package variable <code>geodir</code></p></li><li><p><code>verbose</code> : Verbose logging for ease of monitoring? Default is <code>true</code></p></li></ul><p><strong>Returns</strong></p><ul><li><code>geo</code> : A rectilinear GeoRegion</li></ul><p><a href="https://github.com/GeoRegionsEcosystem/GeoRegions.jl/blob/03bf444f14ec29fc2b7542b77f4ed5109919a93a/src/georegions/create.jl#L1-L34" target="_blank" rel="noreferrer">source</a></p></div><br>`,11)]))}const k=i(t,[["render",o]]);export{g as __pageData,k as default};
