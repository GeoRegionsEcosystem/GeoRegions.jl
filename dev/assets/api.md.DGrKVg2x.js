import{_ as e,c as o,o as i,a7 as t}from"./chunks/framework.D-rV3Mrg.js";const f=JSON.parse('{"title":"Application Programming Interface (APIs)","description":"","frontmatter":{},"headers":[],"relativePath":"api.md","filePath":"api.md","lastUpdated":null}'),n={name:"api.md"},d=t('<h1 id="Application-Programming-Interface-(APIs)" tabindex="-1">Application Programming Interface (APIs) <a class="header-anchor" href="#Application-Programming-Interface-(APIs)" aria-label="Permalink to &quot;Application Programming Interface (APIs) {#Application-Programming-Interface-(APIs)}&quot;">​</a></h1><p>This page contains a brief description of the functions not covered in the tutorials. I aim to describe what the functions do, their arguments, and what is returned.</p><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="GeoRegions.checkpoint" href="#GeoRegions.checkpoint">#</a> <b><u>GeoRegions.checkpoint</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">checkpoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(plon, plat, rN, rS, rE, rW, tlon, tlat, throw) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Bool</span></span></code></pre></div><p>Check if a point with longitude and latitude coordinates <code>plon</code> and <code>plat</code> is found within a region defined by the bounds [<code>rN</code>,<code>rS</code>,<code>rE</code>,<code>rW</code>] format, with <code>tlon</code> and <code>tlat</code> being the threshold/margin of error for the longitude and latitude respectively.</p><p>Arguments:</p><ul><li><p><code>plon::Real</code> : Longitude of the point in question.</p></li><li><p><code>plat::Real</code> : Latitude of the point in question.</p></li><li><p><code>rN::Real</code> : North bound of region</p></li><li><p><code>rS::Real</code> : South bound of region</p></li><li><p><code>rE::Real</code> : East bound of region</p></li><li><p><code>rW::Real</code> : West bound of region</p></li><li><p><code>tlon::Real</code> : Threshold for longitude bounds in °. If set to 0, means that there is no leniency for the point to fall outside the longitude bounds</p></li><li><p><code>tlat::Real</code> : Threshold for latitude bounds in °. If set to 0, means that there is no leniency for the point to fall outside the latitude bounds</p></li><li><p><code>throw::Bool</code> : If <code>throw=true</code>, then if (<code>plon</code>,<code>plat</code>) is not within the region, an error is thrown and the program stops running.</p></li></ul><p><a href="https://github.com/JuliaClimate/GeoRegions.jl/blob/4bf7fc8986e48bac805091226e13a9ea442c283e/src/isin/isin.jl#L126-L141" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="GeoRegions.checkgrid" href="#GeoRegions.checkgrid">#</a> <b><u>GeoRegions.checkgrid</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">checkgrid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(gN, gS, gE, gW, rN, rS, rE, rW, tlon, tlat, throw) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Bool</span></span></code></pre></div><p>Check if a grid with bounds [<code>gN</code>,<code>gS</code>,<code>gE</code>,<code>gW</code>] is found within a region defined by the bounds [<code>rN</code>,<code>rS</code>,<code>rE</code>,<code>rW</code>] format, with <code>tlon</code> and <code>tlat</code> being the threshold/margin of error for the longitude and latitude respectively.</p><p>Arguments:</p><ul><li><p><code>gN::Real</code> : North bound of grid</p></li><li><p><code>gS::Real</code> : South bound of grid</p></li><li><p><code>gE::Real</code> : East bound of grid</p></li><li><p><code>gW::Real</code> : West bound of grid</p></li><li><p><code>rN::Real</code> : North bound of region</p></li><li><p><code>rS::Real</code> : South bound of region</p></li><li><p><code>rE::Real</code> : East bound of region</p></li><li><p><code>rW::Real</code> : West bound of region</p></li><li><p><code>tlon::Real</code> : Threshold for longitude bounds in °. If set to 0, means that there is no leniency for the point to fall outside the longitude bounds</p></li><li><p><code>tlat::Real</code> : Threshold for latitude bounds in °. If set to 0, means that there is no leniency for the point to fall outside the latitude bounds</p></li><li><p><code>throw::Bool</code> : If <code>throw=true</code>, then if (<code>plon</code>,<code>plat</code>) is not within the region, an error is thrown and the program stops running.</p></li></ul><p><a href="https://github.com/JuliaClimate/GeoRegions.jl/blob/4bf7fc8986e48bac805091226e13a9ea442c283e/src/isin/isin.jl#L224-L241" target="_blank" rel="noreferrer">source</a></p></div><br>',6),a=[d];function r(l,s,c,p,h,g){return i(),o("div",null,a)}const b=e(n,[["render",r]]);export{f as __pageData,b as default};
